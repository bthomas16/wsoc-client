{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue-img-orientation-changer.js","webpack:///webpack/bootstrap 7d294b939bf08d84871b","webpack:///./src/index.js","webpack:///./src/directives/index.js","webpack:///./src/directives/img-orientation-changer.js","webpack:///./src/utils/index.js","webpack:///./node_modules/imagesloaded/imagesloaded.js","webpack:///./node_modules/ev-emitter/ev-emitter.js","webpack:///./node_modules/exif-js/exif.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__directives_index__","directives","ImgOrientationChanger","install","Vue","arguments","length","undefined","map","directive","window","__WEBPACK_IMPORTED_MODULE_0__img_orientation_changer__","__WEBPACK_IMPORTED_MODULE_0__utils__","bind","el","_ref","_ref$modifiers","modifiers","debug","_handleOrientation","update","_ref2","vnode","oldVnode","_ref2$modifiers","oldSrc","data","attrs","src","newSrc","console","log","tagName","warn","getEXIFOrientation","then","orientation","toOrientationOne","catch","e","__WEBPACK_IMPORTED_MODULE_0_imagesloaded__","__WEBPACK_IMPORTED_MODULE_0_imagesloaded___default","__WEBPACK_IMPORTED_MODULE_1_exif_js__","__WEBPACK_IMPORTED_MODULE_1_exif_js___default","Promise","resolve","reject","imagesLoaded","exifdata","EXIF","getData","getTag","_toTransform","_domRect","getBoundingClientRect","cWidth","width","cHeight","height","gapFill","Math","abs","_markElementOrientation","key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","attr","style","err","return","_orientationMark","setAttribute","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","EvEmitter","apply","extend","a","b","prop","makeArray","obj","Array","isArray","arraySlice","ImagesLoaded","elem","options","onAlways","queryElem","document","querySelectorAll","error","elements","on","getImages","$","jqDeferred","Deferred","setTimeout","check","LoadingImage","img","Background","url","element","Image","jQuery","slice","create","images","forEach","addElementImages","nodeName","addImage","background","addElementBackgroundImages","nodeType","elementNodeTypes","childImgs","children","child","1","9","11","getComputedStyle","reURL","matches","exec","backgroundImage","addBackground","loadingImage","push","onProgress","image","message","_this","progress","progressedCount","hasAnyBroken","complete","once","isLoaded","emitEvent","notify","eventName","isComplete","jqMethod","getIsImageComplete","confirm","naturalWidth","proxyImage","addEventListener","handleEvent","event","method","type","onload","unbindEvents","onerror","removeEventListener","makeJQueryPlugin","fn","callback","promise","__WEBPACK_AMD_DEFINE_FACTORY__","global","proto","listener","events","_events","listeners","indexOf","onceEvents","_onceEvents","off","index","splice","args","onceListeners","allOff","imageHasData","base64ToArrayBuffer","base64","contentType","match","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","charCodeAt","objectURLToBlob","http","XMLHttpRequest","open","responseType","status","response","send","getImageData","handleBinaryFile","binFile","findEXIFinJPEG","iptcdata","findIPTCinJPEG","isXmpEnabled","xmpdata","findXMPinJPEG","test","arrayBuffer","fileReader","FileReader","target","result","blob","readAsArrayBuffer","Blob","File","byteLength","file","dataView","DataView","getUint8","marker","offset","readEXIFData","getUint16","nameHeaderLength","readIPTCData","startOffset","sectionLength","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","IptcFieldMap","getInt16","getStringFromDB","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","val","numerator","denominator","numValues","getUint32","valueOffset","Number","getInt32","getNextIFDOffset","readThumbnailImage","firstIFDOffset","IFD1OffsetPointer","thumbTags","IFD1Tags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","TiffTags","ExifIFDPointer","ExifTags","StringValues","Components","GPSInfoIFDPointer","GPSTags","dom","DOMParser","xmpString","xmpEndIndex","substring","indexOfXmp","xml2Object","parseFromString","xml2json","xml","json","attributes","j","attribute","item","nodeValue","hasChildNodes","childNodes","old","idx","itemAtt","dataKey","dataValue","textContent","EXIFwrapped","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","0","2","3","4","5","6","7","8","10","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","120","110","55","80","85","122","105","116","enableXmp","disableXmp","HTMLImageElement","getIptcTag","getAllTags","getAllIptcTags","pretty","strPretty","readFromBinaryFile"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,iCAAAH,GACA,gBAAAC,SACAA,QAAA,+BAAAD,IAEAD,EAAA,+BAAAC,KACC,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,SAGAvB,IAAAwB,EAAA,KDgBM,SAAU9B,EAAQ+B,EAAqBzB,GAE7C,YE/EAY,QAAAC,eAAAY,EAAA,cAAAC,OAAA,OAAAC,GAAA3B,EAAA,GAGM4B,GACJC,KAGIC,EAAU,SAASC,GAAgBC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,IAAAA,UAAA,EACvCJ,GAAWO,IAAI,SAAAC,GACbL,EAAIK,UAAUA,EAAU3B,KAAM2B,KAIZ,oBAAXC,SAA0BA,OAAON,KAC1CD,EAAQO,OAAON,KAGFN,EAAA,SACbK,UACAD,4BFuFI,SAAUnC,EAAQ+B,EAAqBzB,GAE7C,YG5GA,IAAAsC,GAAAtC,EAAA,EAEA6B,KAAsBC,QAAU,SAAAC,GAC9BA,EAAIK,UAAUP,IAAsBpB,KAAMoB,MAG7BA,MAAf,GHkHM,SAAUnC,EAAQ+B,EAAqBzB,GAE7C,YI1HA,IAAAuC,GAAAvC,EAAA,EACeyB,GAAA,GACbhB,KAAM,0BACN+B,KAAM,SAAUC,EAAVC,GAAgD,GAAAC,GAAAD,EAAhCE,gBAAgCV,KAAAS,GAAlBE,OAAO,GAAWF,EAC5CE,EAAUD,EAAVC,KACRC,GAAmBL,EAAII,IAEzBE,OAAQ,SAASN,EAATO,EAA+CC,EAAOC,GAAU,GAAAC,GAAAH,EAAhDJ,gBAAgDV,KAAAiB,GAAlCN,OAAO,GAA2BM,EAC9DN,EAAUD,EAAVC,MAEwBO,EAAcF,EAAtCG,KAAQC,MAAUC,IACMC,EAAcP,EAAtCI,KAAQC,MAAUC,GAIvBH,KAAWI,IACTX,GAASY,QAAQC,IAAI,YAAaN,EAAQ,KAAOI,GACpDV,EAAmBL,EAAII,KAK7B,IAAMC,GAAqB,SAACL,EAAII,GAC9B,GAAkB,QAAfJ,EAAGkB,QAEJ,WADAF,SAAQG,KAAK,8DAGfC,aAAmBpB,EAAII,GAAOiB,KAAK,SAACC,GAClCC,YAAiBvB,EAAIsB,EAAalB,KACjCoB,MAAM,SAAAC,GACPT,QAAQG,KAAK,8BAA+BnB,EAAIyB,OJyI9C,SAAUxE,EAAQ+B,EAAqBzB,GAE7C,YKzKAA,GAAAQ,EAAAiB,EAAA,qBAAAoC,KAAA7D,EAAAQ,EAAAiB,EAAA,qBAAAuC,IAAA,IAAAG,GAAAnE,EAAA,GAAAoE,EAAApE,EAAAiB,EAAAkD,GAAAE,EAAArE,EAAA,GAAAsE,EAAAtE,EAAAiB,EAAAoD,GAGMR,EAAqB,SAACpB,EAAII,GAC9B,MAAO,IAAI0B,SAAQ,SAACC,EAASC,GAC3B,IACEC,IAAajC,EAAI,WACfA,EAAGkC,SAAW,KACdC,IAAKC,QAAQpC,EAAI,WACf,GAAMsB,GAAca,IAAKE,OAAOhF,KAAM,cACnC+C,IAASY,QAAQC,IAAI,qBAAsBK,GAC9CS,EAAQT,OAGZ,MAAOG,GACPO,EAAOP,OAKPF,EAAmB,SAACvB,EAAIsB,EAAalB,GACzC,GAAIkC,GAAe,GAEbC,EAAWvC,EAAGwC,wBACdC,EAASF,EAASG,MAClBC,EAAUJ,EAASK,OACnBC,EAAUC,KAAKC,KAAKN,EAASE,GAAS,EAmB5C,QAlBGvC,GAASY,QAAQC,IAAI,mBAAoBjB,EAAIuC,GAGhDS,EAAwBhD,EAAIsB,GAGxBA,IACFgB,IAEIW,IAAK,YACLhE,MAAO,KAGPgE,IAAK,mBACLhE,MAAO,MAILqC,GACN,IAAK,GACHgB,IAEIW,IAAK,YACLhE,MAAO,KAGPgE,IAAK,mBACLhE,MAAO,IAGX,MAEF,KAAK,GACHqD,IAEIW,IAAK,YACLhE,MAAO,oBAGPgE,IAAK,mBACLhE,MAAO,UAGX,MAEF,KAAK,GACHqD,IAEIW,IAAK,YACLhE,MAAO,qBAGPgE,IAAK,mBACLhE,MAAO,UAGX,MAEF,KAAK,GACHqD,IAEIW,IAAK,YACLhE,MAAO,oBAGPgE,IAAK,mBACLhE,MAAO,UAGX,MAEF,KAAK,GACHqD,IAEIW,IAAK,YACLhE,mDAAoD4D,EAApD,QAGAI,IAAK,mBACLhE,MAAO,UAGX,MAEF,KAAK,GACHqD,IAEIW,IAAK,YACLhE,mCAAoC4D,EAApC,QAGAI,IAAK,mBACLhE,MAAO,UAGX,MAEF,KAAK,GACHqD,IAEIW,IAAK,YACLhE,qDAAsD4D,EAAtD,QAGAI,IAAK,mBACLhE,MAAO,UAGX,MAEF,KAAK,GACHqD,IAEIW,IAAK,YACLhE,qCAAsC4D,EAAtC,QAGAI,IAAK,mBACLhE,MAAO,WA7HoC,GAAAiE,IAAA,EAAAC,GAAA,EAAAC,MAAA3D,EAAA,KAmInD,OAAA4D,GAAAC,EAAgBhB,EAAhBiB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8B,IAAtBS,GAAsBN,EAAApE,KAC5Be,GAAG4D,MAAMD,EAAKV,KAAOU,EAAK1E,OApIuB,MAAA4E,GAAAV,GAAA,EAAAC,EAAAS,EAAA,aAAAX,GAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,KAAAC,MA4I/CJ,EAA0B,SAAChD,EAAIsB,GACnC,GAAIyC,GAAmBzC,GAAe,CACtCtB,GAAGgE,aAAa,mBAAoBD,KL2LhC,SAAU9G,EAAQD,EAASO,GM7VjC,GAAA0G,GAAAC;;;;;CAMA,SAAAtE,EAAA7C,GAA+B,YAO3BkH,IACE1G,EAAA,QAGDkC,MAFAyE,EAAA,SAAEC,GACP,MAAApH,GAAA6C,EAAAuE,IACKC,MAAApH,EAAAiH,MAAAhH,EAAAD,QAAAkH,IAeJ,mBAAAtE,eAAAvC,KAID,SAAAuC,EAAAuE,GAEA,YAQA,SAAAE,GAAAC,EAAAC,GACA,OAAAC,KAAAD,GACAD,EAAAE,GAAAD,EAAAC,EAEA,OAAAF,GAMA,QAAAG,GAAAC,GACA,MAAAC,OAAAC,QAAAF,GAEAA,EAGA,gBAAAA,IAAA,gBAAAA,GAAAlF,OAGAqF,EAAAjH,KAAA8G,IAIAA,GAUA,QAAAI,GAAAC,EAAAC,EAAAC,GAEA,KAAA5H,eAAAyH,IACA,UAAAA,GAAAC,EAAAC,EAAAC,EAGA,IAAAC,GAAAH,CAKA,IAJA,gBAAAA,KACAG,EAAAC,SAAAC,iBAAAL,KAGAG,EAEA,WADAlE,GAAAqE,MAAA,iCAAAH,GAAAH,GAIA1H,MAAAiI,SAAAb,EAAAS,GACA7H,KAAA2H,QAAAX,KAA2BhH,KAAA2H,SAE3B,kBAAAA,GACAC,EAAAD,EAEAX,EAAAhH,KAAA2H,WAGAC,GACA5H,KAAAkI,GAAA,SAAAN,GAGA5H,KAAAmI,YAEAC,IAEApI,KAAAqI,WAAA,GAAAD,GAAAE,UAIAC,WAAAvI,KAAAwI,MAAA9F,KAAA1C,OA6IA,QAAAyI,GAAAC,GACA1I,KAAA0I,MAiEA,QAAAC,GAAAC,EAAAC,GACA7I,KAAA4I,MACA5I,KAAA6I,UACA7I,KAAA0I,IAAA,GAAAI,OA9RA,GAAAV,GAAA7F,EAAAwG,OACApF,EAAApB,EAAAoB,QAYA6D,EAAAF,MAAA/F,UAAAyH,KAkEAvB,GAAAlG,UAAAT,OAAAmI,OAAAnC,EAAAvF,WAEAkG,EAAAlG,UAAAoG,WAEAF,EAAAlG,UAAA4G,UAAA,WACAnI,KAAAkJ,UAGAlJ,KAAAiI,SAAAkB,QAAAnJ,KAAAoJ,iBAAApJ,OAMAyH,EAAAlG,UAAA6H,iBAAA,SAAA1B,GAEA,OAAAA,EAAA2B,UACArJ,KAAAsJ,SAAA5B,IAGA,IAAA1H,KAAA2H,QAAA4B,YACAvJ,KAAAwJ,2BAAA9B,EAKA,IAAA+B,GAAA/B,EAAA+B,QACA,IAAAA,GAAAC,EAAAD,GAAA,CAKA,OAFAE,GAAAjC,EAAAK,iBAAA,OAEA1H,EAAA,EAAgBA,EAAAsJ,EAAAxH,OAAsB9B,IAAA,CACtC,GAAAqI,GAAAiB,EAAAtJ,EACAL,MAAAsJ,SAAAZ,GAIA,mBAAA1I,MAAA2H,QAAA4B,WAAA,CACA,GAAAK,GAAAlC,EAAAK,iBAAA/H,KAAA2H,QAAA4B,WACA,KAAAlJ,EAAA,EAAcA,EAAAuJ,EAAAzH,OAAqB9B,IAAA,CACnC,GAAAwJ,GAAAD,EAAAvJ,EACAL,MAAAwJ,2BAAAK,MAKA,IAAAH,IACAI,GAAA,EACAC,GAAA,EACAC,IAAA,EA6MA,OA1MAvC,GAAAlG,UAAAiI,2BAAA,SAAA9B,GACA,GAAAnB,GAAA0D,iBAAAvC,EACA,IAAAnB,EAOA,IAFA,GAAA2D,GAAA,0BACAC,EAAAD,EAAAE,KAAA7D,EAAA8D,iBACA,OAAAF,GAAA,CACA,GAAAvB,GAAAuB,KAAA,EACAvB,IACA5I,KAAAsK,cAAA1B,EAAAlB,GAEAyC,EAAAD,EAAAE,KAAA7D,EAAA8D,mBAOA5C,EAAAlG,UAAA+H,SAAA,SAAAZ,GACA,GAAA6B,GAAA,GAAA9B,GAAAC,EACA1I,MAAAkJ,OAAAsB,KAAAD,IAGA9C,EAAAlG,UAAA+I,cAAA,SAAA1B,EAAAlB,GACA,GAAA6B,GAAA,GAAAZ,GAAAC,EAAAlB,EACA1H,MAAAkJ,OAAAsB,KAAAjB,IAGA9B,EAAAlG,UAAAiH,MAAA,WAUA,QAAAiC,GAAAC,EAAAhD,EAAAiD,GAEApC,WAAA,WACAqC,EAAAC,SAAAH,EAAAhD,EAAAiD,KAZA,GAAAC,GAAA5K,IAIA,IAHAA,KAAA8K,gBAAA,EACA9K,KAAA+K,cAAA,GAEA/K,KAAAkJ,OAAA/G,OAEA,WADAnC,MAAAgL,UAWAhL,MAAAkJ,OAAAC,QAAA,SAAAoB,GACAA,EAAAU,KAAA,WAAAR,GACAF,EAAA/B,WAIAf,EAAAlG,UAAAsJ,SAAA,SAAAH,EAAAhD,EAAAiD,GACA3K,KAAA8K,kBACA9K,KAAA+K,aAAA/K,KAAA+K,eAAAL,EAAAQ,SAEAlL,KAAAmL,UAAA,YAAAnL,KAAA0K,EAAAhD,IACA1H,KAAAqI,YAAArI,KAAAqI,WAAA+C,QACApL,KAAAqI,WAAA+C,OAAApL,KAAA0K,GAGA1K,KAAA8K,iBAAA9K,KAAAkJ,OAAA/G,QACAnC,KAAAgL,WAGAhL,KAAA2H,QAAA5E,OAAAY,GACAA,EAAAC,IAAA,aAAA+G,EAAAD,EAAAhD,IAIAD,EAAAlG,UAAAyJ,SAAA,WACA,GAAAK,GAAArL,KAAA+K,aAAA,aAIA,IAHA/K,KAAAsL,YAAA,EACAtL,KAAAmL,UAAAE,GAAArL,OACAA,KAAAmL,UAAA,UAAAnL,OACAA,KAAAqI,WAAA,CACA,GAAAkD,GAAAvL,KAAA+K,aAAA,kBACA/K,MAAAqI,WAAAkD,GAAAvL,QAUAyI,EAAAlH,UAAAT,OAAAmI,OAAAnC,EAAAvF,WAEAkH,EAAAlH,UAAAiH,MAAA,WAIA,GADAxI,KAAAwL,qBAIA,WADAxL,MAAAyL,QAAA,IAAAzL,KAAA0I,IAAAgD,aAAA,eAKA1L,MAAA2L,WAAA,GAAA7C,OACA9I,KAAA2L,WAAAC,iBAAA,OAAA5L,MACAA,KAAA2L,WAAAC,iBAAA,QAAA5L,MAEAA,KAAA0I,IAAAkD,iBAAA,OAAA5L,MACAA,KAAA0I,IAAAkD,iBAAA,QAAA5L,MACAA,KAAA2L,WAAAlI,IAAAzD,KAAA0I,IAAAjF,KAGAgF,EAAAlH,UAAAiK,mBAAA,WAGA,MAAAxL,MAAA0I,IAAAsC,UAAAhL,KAAA0I,IAAAgD,cAGAjD,EAAAlH,UAAAkK,QAAA,SAAAP,EAAAP,GACA3K,KAAAkL,WACAlL,KAAAmL,UAAA,YAAAnL,UAAA0I,IAAAiC,KAMAlC,EAAAlH,UAAAsK,YAAA,SAAAC,GACA,GAAAC,GAAA,KAAAD,EAAAE,IACAhM,MAAA+L,IACA/L,KAAA+L,GAAAD,IAIArD,EAAAlH,UAAA0K,OAAA,WACAjM,KAAAyL,SAAA,YACAzL,KAAAkM,gBAGAzD,EAAAlH,UAAA4K,QAAA,WACAnM,KAAAyL,SAAA,aACAzL,KAAAkM,gBAGAzD,EAAAlH,UAAA2K,aAAA,WACAlM,KAAA2L,WAAAS,oBAAA,OAAApM,MACAA,KAAA2L,WAAAS,oBAAA,QAAApM,MACAA,KAAA0I,IAAA0D,oBAAA,OAAApM,MACAA,KAAA0I,IAAA0D,oBAAA,QAAApM,OAYA2I,EAAApH,UAAAT,OAAAmI,OAAAR,EAAAlH,WAEAoH,EAAApH,UAAAiH,MAAA,WACAxI,KAAA0I,IAAAkD,iBAAA,OAAA5L,MACAA,KAAA0I,IAAAkD,iBAAA,QAAA5L,MACAA,KAAA0I,IAAAjF,IAAAzD,KAAA4I,IAEA5I,KAAAwL,uBAEAxL,KAAAyL,QAAA,IAAAzL,KAAA0I,IAAAgD,aAAA,gBACA1L,KAAAkM,iBAIAvD,EAAApH,UAAA2K,aAAA,WACAlM,KAAA0I,IAAA0D,oBAAA,OAAApM,MACAA,KAAA0I,IAAA0D,oBAAA,QAAApM,OAGA2I,EAAApH,UAAAkK,QAAA,SAAAP,EAAAP,GACA3K,KAAAkL,WACAlL,KAAAmL,UAAA,YAAAnL,UAAA6I,QAAA8B,KAKAlD,EAAA4E,iBAAA,SAAAtD,IACAA,KAAAxG,EAAAwG,UAKAX,EAAAW,EAEAX,EAAAkE,GAAA1H,aAAA,SAAA+C,EAAA4E,GAEA,MADA,IAAA9E,GAAAzH,KAAA2H,EAAA4E,GACAlE,WAAAmE,QAAApE,EAAApI,UAIAyH,EAAA4E,mBAIA5E,KNuWM,SAAU7H,EAAQD,EAASO,GO7tBjC,GAAAuM,GAAA5F,GAQA,SAAA6F,EAAAhN,GAKI+M,EAAA,MAAerK,MAAAyE,EAAA,kBAAA4F,KAAAlM,KAAAZ,EAAAO,EAAAP,EAAAC,GAAA6M,KAAA7M,EAAAD,QAAAkH,IASlB,mBAAAtE,gBAAA,WAED,YAEA,SAAAuE,MAEA,GAAA6F,GAAA7F,EAAAvF,SAiFA,OA/EAoL,GAAAzE,GAAA,SAAAmD,EAAAuB,GACA,GAAAvB,GAAAuB,EAAA,CAIA,GAAAC,GAAA7M,KAAA8M,QAAA9M,KAAA8M,YAEAC,EAAAF,EAAAxB,GAAAwB,EAAAxB,MAMA,QAJA,GAAA0B,EAAAC,QAAAJ,IACAG,EAAAvC,KAAAoC,GAGA5M,OAGA2M,EAAA1B,KAAA,SAAAI,EAAAuB,GACA,GAAAvB,GAAAuB,EAAA,CAIA5M,KAAAkI,GAAAmD,EAAAuB,EAGA,IAAAK,GAAAjN,KAAAkN,YAAAlN,KAAAkN,eAMA,QAJAD,EAAA5B,GAAA4B,EAAA5B,QAEAuB,IAAA,EAEA5M,OAGA2M,EAAAQ,IAAA,SAAA9B,EAAAuB,GACA,GAAAG,GAAA/M,KAAA8M,SAAA9M,KAAA8M,QAAAzB,EACA,IAAA0B,KAAA5K,OAAA,CAGA,GAAAiL,GAAAL,EAAAC,QAAAJ,EAKA,QAJA,GAAAQ,GACAL,EAAAM,OAAAD,EAAA,GAGApN,OAGA2M,EAAAxB,UAAA,SAAAE,EAAAiC,GACA,GAAAP,GAAA/M,KAAA8M,SAAA9M,KAAA8M,QAAAzB,EACA,IAAA0B,KAAA5K,OAAA,CAIA4K,IAAA/D,MAAA,GACAsE,OAIA,QAFAC,GAAAvN,KAAAkN,aAAAlN,KAAAkN,YAAA7B,GAEAhL,EAAA,EAAgBA,EAAA0M,EAAA5K,OAAsB9B,IAAA,CACtC,GAAAuM,GAAAG,EAAA1M,EACAkN,MAAAX,KAIA5M,KAAAmN,IAAA9B,EAAAuB,SAEAW,GAAAX,IAGAA,EAAA7F,MAAA/G,KAAAsN,GAGA,MAAAtN,QAGA2M,EAAAa,OAAA,iBACAxN,MAAA8M,cACA9M,MAAAkN,aAGApG,KP0uBM,SAAUlH,EAAQD,EAASO,GQv1BjC,GAAA0G,GAAAC,GAAA,WAiVA,QAAA4G,GAAA/E,GACA,QAAAA,EAAA,SAIA,QAAAgF,GAAAC,EAAAC,GACAA,KAAAD,EAAAE,MAAA,8BAAoE,OACpEF,IAAAG,QAAA,8BAAkD,GAKlD,QAJAC,GAAAC,KAAAL,GACAM,EAAAF,EAAA5L,OACA+L,EAAA,GAAAC,aAAAF,GACAG,EAAA,GAAAC,YAAAH,GACA7N,EAAA,EAAuBA,EAAA4N,EAAS5N,IAChC+N,EAAA/N,GAAA0N,EAAAO,WAAAjO,EAEA,OAAA6N,GAGA,QAAAK,GAAA3F,EAAA2D,GACA,GAAAiC,GAAA,GAAAC,eACAD,GAAAE,KAAA,MAAA9F,GAAA,GACA4F,EAAAG,aAAA,OACAH,EAAAvC,OAAA,SAAA7H,GACA,KAAApE,KAAA4O,QAAA,IAAA5O,KAAA4O,QACArC,EAAAvM,KAAA6O,WAGAL,EAAAM,OAGA,QAAAC,GAAArG,EAAA6D,GACA,QAAAyC,GAAAC,GACA,GAAA1L,GAAA2L,EAAAD,EACAvG,GAAA7D,SAAAtB,KACA,IAAA4L,GAAAC,EAAAH,EAEA,IADAvG,EAAAyG,eACArK,EAAAuK,aAAA,CACA,GAAAC,GAAAC,EAAAN,EACAvG,GAAA4G,cAEA/C,GACAA,EAAAhM,KAAAmI,GAIA,GAAAA,EAAAjF,IACA,cAAA+L,KAAA9G,EAAAjF,KAAA,CACA,GAAAgM,GAAA/B,EAAAhF,EAAAjF,IACAuL,GAAAS,OAEa,eAAAD,KAAA9G,EAAAjF,KAAA,CACb,GAAAiM,GAAA,GAAAC,WACAD,GAAAzD,OAAA,SAAA7H,GACA4K,EAAA5K,EAAAwL,OAAAC,SAEAtB,EAAA7F,EAAAjF,IAAA,SAAAqM,GACAJ,EAAAK,kBAAAD,SAEa,CACb,GAAAtB,GAAA,GAAAC,eACAD,GAAAvC,OAAA,WACA,QAAAjM,KAAA4O,QAAA,IAAA5O,KAAA4O,OAGA,2BAFAI,GAAAR,EAAAK,UAIAL,EAAA,MAEAA,EAAAE,KAAA,MAAAhG,EAAAjF,KAAA,GACA+K,EAAAG,aAAA,cACAH,EAAAM,KAAA,UAES,IAAA/O,KAAA4P,aAAAjH,YAAA3I,MAAAiQ,MAAAtH,YAAA3I,MAAAkQ,MAAA,CACT,GAAAP,GAAA,GAAAC,WACAD,GAAAzD,OAAA,SAAA7H,GACArB,GAAAY,QAAAC,IAAA,sBAAAQ,EAAAwL,OAAAC,OAAAK,YACAlB,EAAA5K,EAAAwL,OAAAC,SAGAH,EAAAK,kBAAArH,IAIA,QAAAwG,GAAAiB,GACA,GAAAC,GAAA,GAAAC,UAAAF,EAGA,IADApN,GAAAY,QAAAC,IAAA,sBAAAuM,EAAAD,YACA,KAAAE,EAAAE,SAAA,SAAAF,EAAAE,SAAA,GAEA,MADAvN,IAAAY,QAAAC,IAAA,qBACA,CAOA,KAJA,GAEA2M,GAFAC,EAAA,EACArO,EAAAgO,EAAAD,WAGAM,EAAArO,GAAA,CACA,QAAAiO,EAAAE,SAAAE,GAEA,MADAzN,IAAAY,QAAAC,IAAA,gCAAA4M,EAAA,YAAAJ,EAAAE,SAAAE,KACA,CASA,IANAD,EAAAH,EAAAE,SAAAE,EAAA,GACAzN,GAAAY,QAAAC,IAAA2M,GAKA,KAAAA,EAGA,MAFAxN,IAAAY,QAAAC,IAAA,uBAEA6M,EAAAL,EAAAI,EAAA,EAAAJ,EAAAM,UAAAF,EAAA,GAKAA,IAAA,EAAAJ,EAAAM,UAAAF,EAAA,IAOA,QAAApB,GAAAe,GACA,GAAAC,GAAA,GAAAC,UAAAF,EAGA,IADApN,GAAAY,QAAAC,IAAA,sBAAAuM,EAAAD,YACA,KAAAE,EAAAE,SAAA,SAAAF,EAAAE,SAAA,GAEA,MADAvN,IAAAY,QAAAC,IAAA,qBACA,CAkBA,KAfA,GAAA4M,GAAA,EACArO,EAAAgO,EAAAD,WAcAM,EAAArO,GAAA,CAEA,GAbA,SAAAiO,EAAAI,GACA,MACA,MAAAJ,EAAAE,SAAAE,IACA,KAAAJ,EAAAE,SAAAE,EAAA,IACA,KAAAJ,EAAAE,SAAAE,EAAA,IACA,KAAAJ,EAAAE,SAAAE,EAAA,IACA,IAAAJ,EAAAE,SAAAE,EAAA,IACA,IAAAJ,EAAAE,SAAAE,EAAA,IAMAJ,EAAAI,GAAA,CAGA,GAAAG,GAAAP,EAAAE,SAAAE,EAAA,EACAG,GAAA,OAAAA,GAAA,GAEA,IAAAA,IAEAA,EAAA,EAMA,OAAAC,GAAAT,EAHAK,EAAA,EAAAG,EACAP,EAAAM,UAAAF,EAAA,EAAAG,IAUAH,KAiBA,QAAAI,GAAAT,EAAAU,EAAAC,GAKA,IAJA,GAEAC,GAAAC,EAAAC,EAAAC,EAFAd,EAAA,GAAAC,UAAAF,GACA5M,KAEA4N,EAAAN,EACAM,EAAAN,EAAAC,GACA,KAAAV,EAAAE,SAAAa,IAAA,IAAAf,EAAAE,SAAAa,EAAA,KACAD,EAAAd,EAAAE,SAAAa,EAAA,KACAC,KACAH,EAAAb,EAAAiB,SAAAF,EAAA,GACAF,EAAA,EACAD,EAAAI,EAAAF,GACAH,EAAAO,EAAAlB,EAAAe,EAAA,EAAAF,GAEA1N,EAAA/B,eAAAwP,GAEAzN,EAAAyN,YAAA1J,OACA/D,EAAAyN,GAAAxG,KAAAuG,GAGAxN,EAAAyN,IAAAzN,EAAAyN,GAAAD,GAIAxN,EAAAyN,GAAAD,GAKAI,GAEA,OAAA5N,GAKA,QAAAgO,GAAApB,EAAAqB,EAAAC,EAAAC,EAAAC,GACA,GAEAC,GAAAC,EACAxR,EAHAyR,EAAA3B,EAAAO,UAAAe,GAAAE,GACAI,IAIA,KAAA1R,EAAA,EAAiBA,EAAAyR,EAAUzR,IAC3BuR,EAAAH,EAAA,GAAApR,EAAA,EACAwR,EAAAH,EAAAvB,EAAAO,UAAAkB,GAAAD,KACAE,GAAA9O,GAAAY,QAAAC,IAAA,gBAAAuM,EAAAO,UAAAkB,GAAAD,IACAI,EAAAF,GAAAG,EAAA7B,EAAAyB,EAAAJ,EAAAC,EAAAE,EAEA,OAAAI,GAIA,QAAAC,GAAA7B,EAAAyB,EAAAJ,EAAAC,EAAAE,GACA,GAGAnB,GACAyB,EAAAC,EAAA/Q,EACAgR,EAAAC,EALApG,EAAAmE,EAAAO,UAAAkB,EAAA,GAAAD,GACAU,EAAAlC,EAAAmC,UAAAV,EAAA,GAAAD,GACAY,EAAApC,EAAAmC,UAAAV,EAAA,GAAAD,GAAAH,CAKA,QAAAxF,GACA,OACA,OACA,MAAAqG,EACA,MAAAlC,GAAAG,SAAAsB,EAAA,GAAAD,EAIA,KAFAnB,EAAA6B,EAAA,EAAAE,EAAAX,EAAA,EACAK,KACA9Q,EAAA,EAA6BA,EAAAkR,EAAYlR,IACzC8Q,EAAA9Q,GAAAgP,EAAAG,SAAAE,EAAArP,EAEA,OAAA8Q,EAGA,QAEA,MADAzB,GAAA6B,EAAA,EAAAE,EAAAX,EAAA,EACAN,EAAAnB,EAAAK,EAAA6B,EAAA,EAEA,QACA,MAAAA,EACA,MAAAlC,GAAAO,UAAAkB,EAAA,GAAAD,EAIA,KAFAnB,EAAA6B,EAAA,EAAAE,EAAAX,EAAA,EACAK,KACA9Q,EAAA,EAA6BA,EAAAkR,EAAYlR,IACzC8Q,EAAA9Q,GAAAgP,EAAAO,UAAAF,EAAA,EAAArP,GAAAwQ,EAEA,OAAAM,EAGA,QACA,MAAAI,EACA,MAAAlC,GAAAmC,UAAAV,EAAA,GAAAD,EAGA,KADAM,KACA9Q,EAAA,EAA6BA,EAAAkR,EAAYlR,IACzC8Q,EAAA9Q,GAAAgP,EAAAmC,UAAAC,EAAA,EAAApR,GAAAwQ,EAEA,OAAAM,EAGA,QACA,MAAAI,EAMA,MALAF,GAAAhC,EAAAmC,UAAAC,GAAAZ,GACAS,EAAAjC,EAAAmC,UAAAC,EAAA,GAAAZ,GACAO,EAAA,GAAAM,QAAAL,EAAAC,GACAF,EAAAC,YACAD,EAAAE,cACAF,CAGA,KADAD,KACA9Q,EAAA,EAA6BA,EAAAkR,EAAYlR,IACzCgR,EAAAhC,EAAAmC,UAAAC,EAAA,EAAApR,GAAAwQ,GACAS,EAAAjC,EAAAmC,UAAAC,EAAA,IAAApR,GAAAwQ,GACAM,EAAA9Q,GAAA,GAAAqR,QAAAL,EAAAC,GACAH,EAAA9Q,GAAAgR,YACAF,EAAA9Q,GAAAiR,aAEA,OAAAH,EAGA,QACA,MAAAI,EACA,MAAAlC,GAAAsC,SAAAb,EAAA,GAAAD,EAGA,KADAM,KACA9Q,EAAA,EAA6BA,EAAAkR,EAAYlR,IACzC8Q,EAAA9Q,GAAAgP,EAAAsC,SAAAF,EAAA,EAAApR,GAAAwQ,EAEA,OAAAM,EAGA,SACA,MAAAI,EACA,MAAAlC,GAAAsC,SAAAF,GAAAZ,GAAAxB,EAAAsC,SAAAF,EAAA,GAAAZ,EAGA,KADAM,KACA9Q,EAAA,EAA6BA,EAAAkR,EAAYlR,IACzC8Q,EAAA9Q,GAAAgP,EAAAsC,SAAAF,EAAA,EAAApR,GAAAwQ,GAAAxB,EAAAsC,SAAAF,EAAA,IAAApR,GAAAwQ,EAEA,OAAAM,IASA,QAAAS,GAAAtC,EAAAqB,EAAAE,GAEA,GAAAG,GAAA1B,EAAAM,UAAAe,GAAAE,EAMA,OAAAvB,GAAAkC,UAAAb,EAAA,KAAAK,GAAAH,GAGA,QAAAgB,GAAAvC,EAAAoB,EAAAoB,EAAAjB,GAEA,GAAAkB,GAAAH,EAAAtC,EAAAoB,EAAAoB,EAAAjB,EAEA,KAAAkB,EAEA,QAEA,IAAAA,EAAAzC,EAAAF,WAEA,QAIA,IAAA4C,GAAAvB,EAAAnB,EAAAoB,IAAAqB,EAAAE,EAAApB,EAUA,IAAAmB,EAAA,YAGA,OAAAA,EAAA,aACA,OAEA,GAAAA,EAAAE,cAAAF,EAAAG,gBAAA,CAEA,GAAAC,GAAA1B,EAAAsB,EAAAE,aACAG,EAAAL,EAAAG,eACAH,GAAA,QAAA9C,OAAA,GAAA3B,YAAA+B,EAAAlC,OAAAgF,EAAAC,KACAnH,KAAA,eAGA,KAEA,QACArI,QAAAC,IAAA,4DACA,MACA,SACAD,QAAAC,IAAA,sCAAAkP,EAAA,iBAGA,IAAAA,EAAA,2BACAnP,QAAAC,IAAA,2DAEA,OAAAkP,GAGA,QAAAxB,GAAApD,EAAAkF,EAAAjR,GACA,GAAAkR,GAAA,EACA,KAAAlS,EAAAiS,EAAuBjS,EAAAiS,EAAAjR,EAAkBhB,IACzCkS,GAAAC,OAAAC,aAAArF,EAAAoC,SAAAnP,GAEA,OAAAkS,GAGA,QAAA5C,GAAAN,EAAAiD,GACA,WAAA9B,EAAAnB,EAAAiD,EAAA,GAEA,MADArQ,IAAAY,QAAAC,IAAA,wBAAA0N,EAAAnB,EAAAiD,EAAA,KACA,CAGA,IAAAzB,GACAI,EAAAF,EACA2B,EAAAC,EACAC,EAAAN,EAAA,CAGA,WAAAjD,EAAAO,UAAAgD,GACA/B,GAAA,MACS,WAAAxB,EAAAO,UAAAgD,GAIT,MADA3Q,IAAAY,QAAAC,IAAA,+CACA,CAHA+N,IAAA,EAMA,OAAAxB,EAAAO,UAAAgD,EAAA,GAAA/B,GAEA,MADA5O,IAAAY,QAAAC,IAAA,qCACA,CAGA,IAAAgP,GAAAzC,EAAAmC,UAAAoB,EAAA,GAAA/B,EAEA,IAAAiB,EAAA,EAEA,MADA7P,IAAAY,QAAAC,IAAA,kDAAAuM,EAAAmC,UAAAoB,EAAA,GAAA/B,KACA,CAKA,IAFAI,EAAAR,EAAApB,EAAAuD,IAAAd,EAAAe,EAAAhC,GAEAI,EAAA6B,eAAA,CACAJ,EAAAjC,EAAApB,EAAAuD,IAAA3B,EAAA6B,eAAAC,EAAAlC,EACA,KAAAE,IAAA2B,GAAA,CACA,OAAA3B,GACA,kBACA,YACA,mBACA,sBACA,oBACA,uBACA,gBACA,qBACA,mBACA,kBACA,eACA,iBACA,gBACA,2BACA,iBACA2B,EAAA3B,GAAAiC,EAAAjC,GAAA2B,EAAA3B,GACA,MAEA,mBACA,sBACA2B,EAAA3B,GAAAyB,OAAAC,aAAAC,EAAA3B,GAAA,GAAA2B,EAAA3B,GAAA,GAAA2B,EAAA3B,GAAA,GAAA2B,EAAA3B,GAAA,GACA,MAEA,+BACA2B,EAAA3B,GACAiC,EAAAC,WAAAP,EAAA3B,GAAA,IACAiC,EAAAC,WAAAP,EAAA3B,GAAA,IACAiC,EAAAC,WAAAP,EAAA3B,GAAA,IACAiC,EAAAC,WAAAP,EAAA3B,GAAA,IAGAE,EAAAF,GAAA2B,EAAA3B,IAIA,GAAAE,EAAAiC,kBAAA,CACAP,EAAAlC,EAAApB,EAAAuD,IAAA3B,EAAAiC,kBAAAC,EAAAtC,EACA,KAAAE,IAAA4B,GAAA,CACA,OAAA5B,GACA,mBACA4B,EAAA5B,GAAA4B,EAAA5B,GAAA,GACA,IAAA4B,EAAA5B,GAAA,GACA,IAAA4B,EAAA5B,GAAA,GACA,IAAA4B,EAAA5B,GAAA,GAGAE,EAAAF,GAAA4B,EAAA5B,IAOA,MAFAE,GAAA,UAAAY,EAAAxC,EAAAuD,EAAAd,EAAAjB,GAEAI,EAGA,QAAAxC,GAAAY,GAEA,gBAAApQ,MAAA,CAIA,GAAAqQ,GAAA,GAAAC,UAAAF,EAGA,IADApN,GAAAY,QAAAC,IAAA,sBAAAuM,EAAAD,YACA,KAAAE,EAAAE,SAAA,SAAAF,EAAAE,SAAA,GAEA,MADAvN,IAAAY,QAAAC,IAAA,qBACA,CAOA,KAJA,GAAA4M,GAAA,EACArO,EAAAgO,EAAAD,WACAgE,EAAA,GAAAC,WAEA3D,EAAArO,EAAA,IACA,WAAAmP,EAAAlB,EAAAI,EAAA,IACA,GAAAK,GAAAL,EAAA,EACAM,EAAAV,EAAAM,UAAAF,EAAA,KACA4D,EAAA9C,EAAAlB,EAAAS,EAAAC,GACAuD,EAAAD,EAAApH,QAAA,aACAoH,KAAAE,UAAAF,EAAApH,QAAA,cAAAqH,EAEA,IAAAE,GAAAH,EAAApH,QAAA,eAGAoH,KAAApL,MAAA,EAAAuL,GACA,6nBAWAH,EAAApL,MAAAuL,EAGA,OAAAC,GADAN,EAAAO,gBAAAL,EAAA,aAGA5D,MAKA,QAAAkE,GAAAC,GACA,GAAAC,KAEA,OAAAD,EAAAlL,UACA,GAAAkL,EAAAE,WAAA1S,OAAA,GACAyS,EAAA,iBACA,QAAAE,GAAA,EAA2BA,EAAAH,EAAAE,WAAA1S,OAA2B2S,IAAA,CACtD,GAAAC,GAAAJ,EAAAE,WAAAG,KAAAF,EACAF,GAAA,eAAAG,EAAA1L,UAAA0L,EAAAE,gBAGS,OAAAN,EAAAlL,SACT,MAAAkL,GAAAM,SAIA,IAAAN,EAAAO,gBACA,OAAA7U,GAAA,EAAwBA,EAAAsU,EAAAQ,WAAAhT,OAA2B9B,IAAA,CACnD,GAAAwJ,GAAA8K,EAAAQ,WAAAH,KAAA3U,GACAgJ,EAAAQ,EAAAR,QACA,UAAAuL,EAAAvL,GACAuL,EAAAvL,GAAAqL,EAAA7K,OACa,CACb,SAAA+K,EAAAvL,GAAAmB,KAAA,CACA,GAAA4K,GAAAR,EAAAvL,EACAuL,GAAAvL,MACAuL,EAAAvL,GAAAmB,KAAA4K,GAEAR,EAAAvL,GAAAmB,KAAAkK,EAAA7K,KAKA,MAAA+K,GAGA,QAAAJ,GAAAG,GACA,IACA,GAAAtN,KACA,IAAAsN,EAAA/K,SAAAzH,OAAA,EACA,OAAA9B,GAAA,EAA6BA,EAAAsU,EAAA/K,SAAAzH,OAAyB9B,IAAA,CACtD,GAAA2U,GAAAL,EAAA/K,SAAAoL,KAAA3U,GACAwU,EAAAG,EAAAH,UACA,QAAAQ,KAAAR,GAAA,CACA,GAAAS,GAAAT,EAAAQ,GACAE,EAAAD,EAAAjM,SACAmM,EAAAF,EAAAL,cAEA7S,KAAAmT,IACAlO,EAAAkO,GAAAC,GAGA,GAAAnM,GAAA2L,EAAA3L,QAEA,aAAAhC,EAAAgC,GACAhC,EAAAgC,GAAAqL,EAAAM,OACiB,CACjB,YAAA3N,EAAAgC,GAAA,MACA,GAAA+L,GAAA/N,EAAAgC,EAEAhC,GAAAgC,MACAhC,EAAAgC,GAAAmB,KAAA4K,GAEA/N,EAAAgC,GAAAmB,KAAAkK,EAAAM,SAIA3N,GAAAsN,EAAAc,WAEA,OAAApO,GACW,MAAAjD,GACXT,QAAAC,IAAAQ,EAAAuG,UAj8BA,GAAA5H,IAAA,EAIA+B,EAAA,SAAAuC,GACA,MAAAA,aAAAvC,GAAAuC,EACArH,eAAA8E,QACA9E,KAAA0V,YAAArO,GADA,GAAAvC,GAAAuC,QAKA,KAAAzH,KAAAD,UACAA,EAAAC,EAAAD,QAAAmF,GAEAnF,EAAAmF,MAKA,IAAA+O,GAAA/O,EAAA6Q,MAGAC,MAAA,cACAC,MAAA,kBAGAC,MAAA,aAGAC,MAAA,kBACAC,MAAA,kBACAC,MAAA,0BACAC,MAAA,yBAGAC,MAAA,YACAC,MAAA,cAGAC,MAAA,mBAGAC,MAAA,mBACAC,MAAA,oBACAC,MAAA,aACAC,MAAA,qBACAC,MAAA,sBAGAC,MAAA,eACAC,MAAA,UACAC,MAAA,kBACAC,MAAA,sBACAC,MAAA,kBACAC,MAAA,OACAC,MAAA,oBACAC,MAAA,gBACAC,MAAA,kBACAC,MAAA,eACAC,MAAA,mBACAC,MAAA,kBACAC,MAAA,eACAC,MAAA,cACAC,MAAA,QACAC,MAAA,cACAC,MAAA,cACAC,MAAA,cACAC,MAAA,2BACAC,MAAA,wBACAC,MAAA,wBACAC,MAAA,2BACAC,MAAA,kBACAC,MAAA,gBACAC,MAAA,gBACAC,MAAA,aACAC,MAAA,YACAC,MAAA,aACAC,MAAA,iBACAC,MAAA,eACAC,MAAA,eACAC,MAAA,oBACAC,MAAA,wBACAC,MAAA,mBACAC,MAAA,cACAC,MAAA,WACAC,MAAA,aACAC,MAAA,YACAC,MAAA,2BACAC,MAAA,uBAGAC,MAAA,6BACAC,MAAA,iBAGAzF,EAAA7O,EAAA6O,UACA0F,IAAA,aACAC,IAAA,cACAC,MAAA,iBACAC,MAAA,oBACAL,MAAA,6BACAM,IAAA,gBACAC,IAAA,cACAC,IAAA,4BACAC,IAAA,cACAC,IAAA,kBACAC,IAAA,sBACAC,IAAA,mBACAC,IAAA,mBACAC,IAAA,cACAC,IAAA,cACAC,IAAA,iBACAC,IAAA,eACAC,IAAA,eACAC,IAAA,kBACAC,IAAA,wBACAC,IAAA,8BACAC,IAAA,mBACAC,IAAA,aACAC,IAAA,wBACAC,IAAA,oBACAC,IAAA,sBACAC,IAAA,WACAC,IAAA,mBACAC,IAAA,OACAC,IAAA,QACAC,IAAA,WACAC,IAAA,SACAC,MAAA,aAGAnH,EAAAnP,EAAAmP,SACAoH,EAAA,eACAvR,EAAA,iBACAwR,EAAA,cACAC,EAAA,kBACAC,EAAA,eACAC,EAAA,iBACAC,EAAA,cACAC,EAAA,eACAC,EAAA,gBACA7R,EAAA,YACA8R,GAAA,iBACA7R,GAAA,SACA8R,GAAA,cACAC,GAAA,WACAC,GAAA,cACAC,GAAA,WACAC,GAAA,qBACAC,GAAA,kBACAC,GAAA,cACAC,GAAA,qBACAC,GAAA,kBACAC,GAAA,sBACAC,GAAA,mBACAC,GAAA,oBACAC,GAAA,iBACAC,GAAA,qBACAC,GAAA,kBACAC,GAAA,sBACAC,GAAA,qBACAC,GAAA,eACAC,GAAA,mBAIAjK,EAAAjO,EAAAiO,UACAsG,IAAA,aACAC,IAAA,cACAG,IAAA,gBACAC,IAAA,cACAC,IAAA,4BACAS,IAAA,eACAR,IAAA,cACAC,IAAA,kBACAQ,IAAA,eACAC,IAAA,kBACAL,IAAA,cACAC,IAAA,cACAJ,IAAA,sBACAK,IAAA,iBACAI,IAAA,eACAC,IAAA,kBACAI,IAAA,oBACAb,IAAA,mBACAC,IAAA,mBACAa,IAAA,uBAGA/G,EAAAhP,EAAAgP,cACAmJ,iBACA5B,EAAA,cACAvR,EAAA,SACAwR,EAAA,iBACAC,EAAA,oBACAC,EAAA,mBACAC,EAAA,mBACAC,EAAA,iBACAC,EAAA,gBACAC,EAAA,kBAEAsB,cACA7B,EAAA,UACAvR,EAAA,UACAwR,EAAA,wBACAC,EAAA,OACAC,EAAA,YACAC,EAAA,UACAC,EAAA,UACAyB,IAAA,SAEAC,aACA/B,EAAA,UACAvR,EAAA,WACAwR,EAAA,cACAC,EAAA,gCACAC,EAAA,QACAzR,EAAA,eACA8R,GAAA,iBACA7R,GAAA,QACA8R,GAAA,wCACAC,GAAA,yCACAC,GAAA,0CACAC,GAAA,sCACAE,GAAA,mBACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,sBACAS,IAAA,SAEAE,OACAhC,EAAA,qBACAvR,EAAA,cACA2R,EAAA,mCACAE,EAAA,+BACA5R,EAAA,qCACAgS,GAAA,gEACAE,GAAA,4DACAC,GAAA,4CACAQ,GAAA,gCACAC,GAAA,yBACAI,GAAA,oDACAO,GAAA,gDACAC,GAAA,oBACAC,GAAA,sCACAC,GAAA,iEACAC,GAAA,6DACAC,GAAA,6DACAC,GAAA,wFACAC,GAAA,oFACAC,GAAA,iDACAC,GAAA,4EACAC,GAAA,yEAEAC,eACAnU,EAAA,cACAwR,EAAA,6BACAC,EAAA,6BACAC,EAAA,+BACAC,EAAA,+BACAE,EAAA,mBACAC,EAAA,kCAEAsC,kBACA7C,EAAA,WACAvR,EAAA,YACAwR,EAAA,WACAC,EAAA,eAEA4C,WACArU,EAAA,yBAEAsU,gBACA/C,EAAA,iBACAvR,EAAA,kBAEAuU,cACAhD,EAAA,qBACAvR,EAAA,wBAEAwU,aACAjD,EAAA,OACAvR,EAAA,cACAwR,EAAA,eACAC,EAAA,gBACAC,EAAA,kBAEA+C,UACAlD,EAAA,SACAvR,EAAA,OACAwR,EAAA,QAEAkD,YACAnD,EAAA,SACAvR,EAAA,iBACAwR,EAAA,mBAEAmD,WACApD,EAAA,SACAvR,EAAA,OACAwR,EAAA,QAEAoD,sBACArD,EAAA,UACAvR,EAAA,QACAwR,EAAA,aACAC,EAAA,gBAEAoD,YACApD,EAAA,OAGAxH,YACAsH,EAAA,GACAvR,EAAA,IACAwR,EAAA,KACAC,EAAA,KACAC,EAAA,IACAC,EAAA,IACAC,EAAA,MA4LAtK,GACAwN,IAAA,UACAC,IAAA,SACAlC,GAAA,WACAmC,GAAA,cACAC,GAAA,SACAC,GAAA,cACAC,IAAA,gBACAC,IAAA,WACAC,IAAA,YACAlD,GAAA,WA4bAnX,GAAAsa,UAAA,WACAta,EAAAuK,cAAA,GAGAvK,EAAAua,WAAA,WACAva,EAAAuK,cAAA,GAGAvK,EAAAC,QAAA,SAAA2D,EAAA6D,GACA,SAAAxM,KAAA+I,OAAAJ,YAAA3I,MAAA+I,OACA/I,KAAAuf,kBAAA5W,YAAA3I,MAAAuf,oBACA5W,EAAAsC,YAGAyC,EAAA/E,GAGA6D,GACAA,EAAAhM,KAAAmI,GAHAqG,EAAArG,EAAA6D,IAMA,IAGAzH,EAAAE,OAAA,SAAA0D,EAAAmJ,GACA,GAAApE,EAAA/E,GACA,MAAAA,GAAA7D,SAAAgN,IAGA/M,EAAAya,WAAA,SAAA7W,EAAAmJ,GACA,GAAApE,EAAA/E,GACA,MAAAA,GAAAyG,SAAA0C,IAGA/M,EAAA0a,WAAA,SAAA9W,GACA,IAAA+E,EAAA/E,GAAA,QACA,IAAAzB,GACA1D,EAAAmF,EAAA7D,SACAkN,IACA,KAAA9K,IAAA1D,GACAA,EAAA/B,eAAAyF,KACA8K,EAAA9K,GAAA1D,EAAA0D,GAGA,OAAA8K,IAGAjN,EAAA2a,eAAA,SAAA/W,GACA,IAAA+E,EAAA/E,GAAA,QACA,IAAAzB,GACA1D,EAAAmF,EAAAyG,SACA4C,IACA,KAAA9K,IAAA1D,GACAA,EAAA/B,eAAAyF,KACA8K,EAAA9K,GAAA1D,EAAA0D,GAGA,OAAA8K,IAGAjN,EAAA4a,OAAA,SAAAhX,GACA,IAAA+E,EAAA/E,GAAA,QACA,IAAAzB,GACA1D,EAAAmF,EAAA7D,SACA8a,EAAA,EACA,KAAA1Y,IAAA1D,GACAA,EAAA/B,eAAAyF,KACA,gBAAA1D,GAAA0D,GACA1D,EAAA0D,YAAAuL,QACAmN,GAAA1Y,EAAA,MAAA1D,EAAA0D,GAAA,KAAA1D,EAAA0D,GAAAkL,UAAA,IAAA5O,EAAA0D,GAAAmL,YAAA,QAEAuN,GAAA1Y,EAAA,OAAA1D,EAAA0D,GAAA9E,OAAA,eAGAwd,GAAA1Y,EAAA,MAAA1D,EAAA0D,GAAA,OAIA,OAAA0Y,IAGA7a,EAAA8a,mBAAA,SAAAzP,GACA,MAAAjB,GAAAiB,IAIQvJ,SAECxE,MAFmByE,EAAA,WAC5B,MAAA/B,IACSiC,MAAApH,EAAAiH,MAAAhH,EAAAD,QAAAkH,KAERtG,KAAAP","file":"vue-img-orientation-changer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-img-orientation-changer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-img-orientation-changer\"] = factory();\n\telse\n\t\troot[\"vue-img-orientation-changer\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-img-orientation-changer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-img-orientation-changer\"] = factory();\n\telse\n\t\troot[\"vue-img-orientation-changer\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_index__ = __webpack_require__(1);\n// directives\n\n\nvar directives = [__WEBPACK_IMPORTED_MODULE_0__directives_index__[\"a\" /* default */]];\n\nvar install = function install(Vue) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  directives.map(function (directive) {\n    Vue.directive(directive.name, directive);\n  });\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  install: install,\n  ImgOrientationChanger: __WEBPACK_IMPORTED_MODULE_0__directives_index__[\"a\" /* default */]\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__img_orientation_changer__ = __webpack_require__(2);\n\n\n__WEBPACK_IMPORTED_MODULE_0__img_orientation_changer__[\"a\" /* default */].install = function (Vue) {\n  Vue.directive(__WEBPACK_IMPORTED_MODULE_0__img_orientation_changer__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__img_orientation_changer__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__img_orientation_changer__[\"a\" /* default */]);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(3);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'img-orientation-changer',\n  bind: function bind(el, _ref) {\n    var _ref$modifiers = _ref.modifiers,\n        modifiers = _ref$modifiers === undefined ? { debug: false } : _ref$modifiers;\n    var debug = modifiers.debug;\n\n    _handleOrientation(el, debug);\n  },\n  update: function update(el, _ref2, vnode, oldVnode) {\n    var _ref2$modifiers = _ref2.modifiers,\n        modifiers = _ref2$modifiers === undefined ? { debug: false } : _ref2$modifiers;\n    var debug = modifiers.debug;\n    var oldSrc = oldVnode.data.attrs.src;\n    var newSrc = vnode.data.attrs.src;\n\n    // if src changes => we need to update to reset transform property.\n    // otherwise, we don't have to care about the image changes.\n\n    if (oldSrc !== newSrc) {\n      if (debug) {\n        console.log('_onUpdate', oldSrc, '=>', newSrc);\n      }\n      _handleOrientation(el, debug);\n    }\n  }\n});\n\nvar _handleOrientation = function _handleOrientation(el, debug) {\n  if (el.tagName !== 'IMG') {\n    console.warn('WARNING: img-orientation-changer only works on IMG element.');\n    return;\n  }\n  Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* getEXIFOrientation */])(el, debug).then(function (orientation) {\n    Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* toOrientationOne */])(el, orientation, debug);\n  }).catch(function (e) {\n    console.warn('WARNING: img failed to load', el, e);\n  });\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return getEXIFOrientation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return toOrientationOne; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_imagesloaded__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_imagesloaded___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_imagesloaded__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_exif_js__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_exif_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_exif_js__);\n\n\n\nvar getEXIFOrientation = function getEXIFOrientation(el, debug) {\n  return new Promise(function (resolve, reject) {\n    try {\n      __WEBPACK_IMPORTED_MODULE_0_imagesloaded___default()(el, function () {\n        el.exifdata = null;\n        __WEBPACK_IMPORTED_MODULE_1_exif_js___default.a.getData(el, function () {\n          var orientation = __WEBPACK_IMPORTED_MODULE_1_exif_js___default.a.getTag(this, 'Orientation');\n          if (debug) {\n            console.log('getEXIFOrientation', orientation);\n          }\n          resolve(orientation);\n        });\n      });\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nvar toOrientationOne = function toOrientationOne(el, orientation, debug) {\n  var _toTransform = '';\n  // don't have consider IE 8 since Vue.js need IE 9+ version;\n  var _domRect = el.getBoundingClientRect();\n  var cWidth = _domRect.width;\n  var cHeight = _domRect.height;\n  var gapFill = Math.abs((cWidth - cHeight) / 2);\n  if (debug) {\n    console.log('toOrientationOne', el, _domRect);\n  }\n  // if detect none orientation; reset transform;\n\n  _markElementOrientation(el, orientation);\n\n  if (!orientation) {\n    _toTransform = [{\n      key: 'transform',\n      value: ''\n    }, {\n      key: 'transform-origin',\n      value: ''\n    }];\n  }\n  switch (orientation) {\n    case 1:\n      {\n        _toTransform = [{\n          key: 'transform',\n          value: ''\n        }, {\n          key: 'transform-origin',\n          value: ''\n        }];\n        break;\n      }\n    case 2:\n      {\n        _toTransform = [{\n          key: 'transform',\n          value: 'rotateY(180deg)'\n        }, {\n          key: 'transform-origin',\n          value: 'center'\n        }];\n        break;\n      }\n    case 3:\n      {\n        _toTransform = [{\n          key: 'transform',\n          value: 'rotateZ(-180deg)'\n        }, {\n          key: 'transform-origin',\n          value: 'center'\n        }];\n        break;\n      }\n    case 4:\n      {\n        _toTransform = [{\n          key: 'transform',\n          value: 'rotateX(180deg)'\n        }, {\n          key: 'transform-origin',\n          value: 'center'\n        }];\n        break;\n      }\n    case 5:\n      {\n        _toTransform = [{\n          key: 'transform',\n          value: 'rotateZ(90deg) rotateX(180deg) translateX(' + gapFill + 'px)'\n        }, {\n          key: 'transform-origin',\n          value: 'center'\n        }];\n        break;\n      }\n    case 6:\n      {\n        _toTransform = [{\n          key: 'transform',\n          value: 'rotateZ(90deg) translateX(' + gapFill + 'px)'\n        }, {\n          key: 'transform-origin',\n          value: 'center'\n        }];\n        break;\n      }\n    case 7:\n      {\n        _toTransform = [{\n          key: 'transform',\n          value: 'rotateZ(-90deg) rotateX(180deg) translateX(-' + gapFill + 'px)'\n        }, {\n          key: 'transform-origin',\n          value: 'center'\n        }];\n        break;\n      }\n    case 8:\n      {\n        _toTransform = [{\n          key: 'transform',\n          value: 'rotateZ(-90deg) translateX(-' + gapFill + 'px)'\n        }, {\n          key: 'transform-origin',\n          value: 'center'\n        }];\n        break;\n      }\n  }\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _toTransform[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var attr = _step.value;\n\n      el.style[attr.key] = attr.value;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\n/*\n  @ mark data-orientation\n */\nvar _markElementOrientation = function _markElementOrientation(el, orientation) {\n  var _orientationMark = orientation || 0;\n  el.setAttribute('data-orientation', _orientationMark);\n};\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * imagesLoaded v4.1.4\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\n\n( function( window, factory ) { 'use strict';\n  // universal module definition\n\n  /*global define: false, module: false, require: false */\n\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(5)\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter ) {\n      return factory( window, EvEmitter );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('ev-emitter')\n    );\n  } else {\n    // browser global\n    window.imagesLoaded = factory(\n      window,\n      window.EvEmitter\n    );\n  }\n\n})( typeof window !== 'undefined' ? window : this,\n\n// --------------------------  factory -------------------------- //\n\nfunction factory( window, EvEmitter ) {\n\n'use strict';\n\nvar $ = window.jQuery;\nvar console = window.console;\n\n// -------------------------- helpers -------------------------- //\n\n// extend objects\nfunction extend( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n}\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nfunction makeArray( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n}\n\n// -------------------------- imagesLoaded -------------------------- //\n\n/**\n * @param {Array, Element, NodeList, String} elem\n * @param {Object or Function} options - if function, use as callback\n * @param {Function} onAlways - callback function\n */\nfunction ImagesLoaded( elem, options, onAlways ) {\n  // coerce ImagesLoaded() without new, to be new ImagesLoaded()\n  if ( !( this instanceof ImagesLoaded ) ) {\n    return new ImagesLoaded( elem, options, onAlways );\n  }\n  // use elem as selector string\n  var queryElem = elem;\n  if ( typeof elem == 'string' ) {\n    queryElem = document.querySelectorAll( elem );\n  }\n  // bail if bad element\n  if ( !queryElem ) {\n    console.error( 'Bad element for imagesLoaded ' + ( queryElem || elem ) );\n    return;\n  }\n\n  this.elements = makeArray( queryElem );\n  this.options = extend( {}, this.options );\n  // shift arguments if no options set\n  if ( typeof options == 'function' ) {\n    onAlways = options;\n  } else {\n    extend( this.options, options );\n  }\n\n  if ( onAlways ) {\n    this.on( 'always', onAlways );\n  }\n\n  this.getImages();\n\n  if ( $ ) {\n    // add jQuery Deferred object\n    this.jqDeferred = new $.Deferred();\n  }\n\n  // HACK check async to allow time to bind listeners\n  setTimeout( this.check.bind( this ) );\n}\n\nImagesLoaded.prototype = Object.create( EvEmitter.prototype );\n\nImagesLoaded.prototype.options = {};\n\nImagesLoaded.prototype.getImages = function() {\n  this.images = [];\n\n  // filter & find items if we have an item selector\n  this.elements.forEach( this.addElementImages, this );\n};\n\n/**\n * @param {Node} element\n */\nImagesLoaded.prototype.addElementImages = function( elem ) {\n  // filter siblings\n  if ( elem.nodeName == 'IMG' ) {\n    this.addImage( elem );\n  }\n  // get background image on element\n  if ( this.options.background === true ) {\n    this.addElementBackgroundImages( elem );\n  }\n\n  // find children\n  // no non-element nodes, #143\n  var nodeType = elem.nodeType;\n  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\n    return;\n  }\n  var childImgs = elem.querySelectorAll('img');\n  // concat childElems to filterFound array\n  for ( var i=0; i < childImgs.length; i++ ) {\n    var img = childImgs[i];\n    this.addImage( img );\n  }\n\n  // get child background images\n  if ( typeof this.options.background == 'string' ) {\n    var children = elem.querySelectorAll( this.options.background );\n    for ( i=0; i < children.length; i++ ) {\n      var child = children[i];\n      this.addElementBackgroundImages( child );\n    }\n  }\n};\n\nvar elementNodeTypes = {\n  1: true,\n  9: true,\n  11: true\n};\n\nImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    // Firefox returns null if in a hidden iframe https://bugzil.la/548397\n    return;\n  }\n  // get url inside url(\"...\")\n  var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\n  var matches = reURL.exec( style.backgroundImage );\n  while ( matches !== null ) {\n    var url = matches && matches[2];\n    if ( url ) {\n      this.addBackground( url, elem );\n    }\n    matches = reURL.exec( style.backgroundImage );\n  }\n};\n\n/**\n * @param {Image} img\n */\nImagesLoaded.prototype.addImage = function( img ) {\n  var loadingImage = new LoadingImage( img );\n  this.images.push( loadingImage );\n};\n\nImagesLoaded.prototype.addBackground = function( url, elem ) {\n  var background = new Background( url, elem );\n  this.images.push( background );\n};\n\nImagesLoaded.prototype.check = function() {\n  var _this = this;\n  this.progressedCount = 0;\n  this.hasAnyBroken = false;\n  // complete if no images\n  if ( !this.images.length ) {\n    this.complete();\n    return;\n  }\n\n  function onProgress( image, elem, message ) {\n    // HACK - Chrome triggers event before object properties have changed. #83\n    setTimeout( function() {\n      _this.progress( image, elem, message );\n    });\n  }\n\n  this.images.forEach( function( loadingImage ) {\n    loadingImage.once( 'progress', onProgress );\n    loadingImage.check();\n  });\n};\n\nImagesLoaded.prototype.progress = function( image, elem, message ) {\n  this.progressedCount++;\n  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;\n  // progress event\n  this.emitEvent( 'progress', [ this, image, elem ] );\n  if ( this.jqDeferred && this.jqDeferred.notify ) {\n    this.jqDeferred.notify( this, image );\n  }\n  // check if completed\n  if ( this.progressedCount == this.images.length ) {\n    this.complete();\n  }\n\n  if ( this.options.debug && console ) {\n    console.log( 'progress: ' + message, image, elem );\n  }\n};\n\nImagesLoaded.prototype.complete = function() {\n  var eventName = this.hasAnyBroken ? 'fail' : 'done';\n  this.isComplete = true;\n  this.emitEvent( eventName, [ this ] );\n  this.emitEvent( 'always', [ this ] );\n  if ( this.jqDeferred ) {\n    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';\n    this.jqDeferred[ jqMethod ]( this );\n  }\n};\n\n// --------------------------  -------------------------- //\n\nfunction LoadingImage( img ) {\n  this.img = img;\n}\n\nLoadingImage.prototype = Object.create( EvEmitter.prototype );\n\nLoadingImage.prototype.check = function() {\n  // If complete is true and browser supports natural sizes,\n  // try to check for image status manually.\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    // report based on naturalWidth\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    return;\n  }\n\n  // If none of the checks above matched, simulate loading on detached element.\n  this.proxyImage = new Image();\n  this.proxyImage.addEventListener( 'load', this );\n  this.proxyImage.addEventListener( 'error', this );\n  // bind to image as well for Firefox. #191\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.proxyImage.src = this.img.src;\n};\n\nLoadingImage.prototype.getIsImageComplete = function() {\n  // check for non-zero, non-undefined naturalWidth\n  // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671\n  return this.img.complete && this.img.naturalWidth;\n};\n\nLoadingImage.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.img, message ] );\n};\n\n// ----- events ----- //\n\n// trigger specified handler for event type\nLoadingImage.prototype.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nLoadingImage.prototype.onload = function() {\n  this.confirm( true, 'onload' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.onerror = function() {\n  this.confirm( false, 'onerror' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.unbindEvents = function() {\n  this.proxyImage.removeEventListener( 'load', this );\n  this.proxyImage.removeEventListener( 'error', this );\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\n// -------------------------- Background -------------------------- //\n\nfunction Background( url, element ) {\n  this.url = url;\n  this.element = element;\n  this.img = new Image();\n}\n\n// inherit LoadingImage prototype\nBackground.prototype = Object.create( LoadingImage.prototype );\n\nBackground.prototype.check = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.img.src = this.url;\n  // check if image is already complete\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    this.unbindEvents();\n  }\n};\n\nBackground.prototype.unbindEvents = function() {\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\nBackground.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.element, message ] );\n};\n\n// -------------------------- jQuery -------------------------- //\n\nImagesLoaded.makeJQueryPlugin = function( jQuery ) {\n  jQuery = jQuery || window.jQuery;\n  if ( !jQuery ) {\n    return;\n  }\n  // set local variable\n  $ = jQuery;\n  // $().imagesLoaded()\n  $.fn.imagesLoaded = function( options, callback ) {\n    var instance = new ImagesLoaded( this, options, callback );\n    return instance.jqDeferred.promise( $(this) );\n  };\n};\n// try making plugin\nImagesLoaded.makeJQueryPlugin();\n\n// --------------------------  -------------------------- //\n\nreturn ImagesLoaded;\n\n});\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (true) {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n            return EXIF;\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n}.call(this));\n\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue-img-orientation-changer.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7d294b939bf08d84871b","// directives\nimport ImgOrientationChanger from './directives/index';\n\nconst directives = [\n  ImgOrientationChanger\n];\n\nconst install = function(Vue, opts = {}) {\n  directives.map(directive => {\n    Vue.directive(directive.name, directive)\n  })\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nexport default {\n  install,\n  ImgOrientationChanger\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import ImgOrientationChanger from './img-orientation-changer'\n\nImgOrientationChanger.install = Vue => {\n  Vue.directive(ImgOrientationChanger.name, ImgOrientationChanger)\n};\n\nexport default ImgOrientationChanger\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/index.js","import { getEXIFOrientation, toOrientationOne } from '../utils'\nexport default {\n  name: 'img-orientation-changer',\n  bind: function (el, { modifiers = { debug: false } }) {\n    const { debug } = modifiers;\n    _handleOrientation(el, debug)\n  },\n  update: function(el,  { modifiers = { debug: false }}, vnode, oldVnode) {\n    const { debug } = modifiers;\n\n    const { data: { attrs : { src : oldSrc }} } = oldVnode;\n    const { data: { attrs : { src : newSrc }} } = vnode;\n\n    // if src changes => we need to update to reset transform property.\n    // otherwise, we don't have to care about the image changes.\n    if(oldSrc !== newSrc) {\n      if(debug) { console.log('_onUpdate', oldSrc, '=>',  newSrc); }\n      _handleOrientation(el, debug)\n    }\n  }\n}\n\nconst _handleOrientation = (el, debug) => {\n  if(el.tagName !== 'IMG') {\n    console.warn('WARNING: img-orientation-changer only works on IMG element.');\n    return ;\n  }\n  getEXIFOrientation(el, debug).then((orientation) => {\n    toOrientationOne(el, orientation, debug);\n  }).catch(e => {\n    console.warn('WARNING: img failed to load', el, e);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/img-orientation-changer.js","import imagesLoaded from 'imagesloaded'\nimport EXIF from 'exif-js'\n\nconst getEXIFOrientation = (el, debug) => {\n  return new Promise((resolve, reject) => {\n    try {\n      imagesLoaded(el, function () {\n        el.exifdata = null;\n        EXIF.getData(el, function () {\n          const orientation = EXIF.getTag(this, 'Orientation');\n          if(debug) { console.log('getEXIFOrientation', orientation); }\n          resolve(orientation)\n        });\n      })\n    } catch (e) {\n      reject(e)\n    }\n  })\n};\n\nconst toOrientationOne = (el, orientation, debug) => {\n  let _toTransform = '';\n  // don't have consider IE 8 since Vue.js need IE 9+ version;\n  const _domRect = el.getBoundingClientRect();\n  const cWidth = _domRect.width;\n  const cHeight = _domRect.height;\n  const gapFill = Math.abs((cWidth - cHeight)/2);\n  if(debug) { console.log('toOrientationOne', el, _domRect); }\n  // if detect none orientation; reset transform;\n\n  _markElementOrientation(el, orientation);\n\n\n  if(!orientation) {\n    _toTransform = [\n      {\n        key: 'transform',\n        value: ''\n      },\n      {\n        key: 'transform-origin',\n        value: ''\n      }\n    ]\n  }\n  switch (orientation) {\n    case 1: {\n      _toTransform = [\n        {\n          key: 'transform',\n          value: ''\n        },\n        {\n          key: 'transform-origin',\n          value: ''\n        }\n      ];\n      break;\n    }\n    case 2: {\n      _toTransform = [\n        {\n          key: 'transform',\n          value: 'rotateY(180deg)'\n        },\n        {\n          key: 'transform-origin',\n          value: 'center'\n        }\n      ];\n      break;\n    }\n    case 3: {\n      _toTransform = [\n        {\n          key: 'transform',\n          value: 'rotateZ(-180deg)'\n        },\n        {\n          key: 'transform-origin',\n          value: 'center'\n        }\n      ];\n      break;\n    }\n    case 4: {\n      _toTransform = [\n        {\n          key: 'transform',\n          value: 'rotateX(180deg)'\n        },\n        {\n          key: 'transform-origin',\n          value: 'center'\n        }\n      ];\n      break;\n    }\n    case 5: {\n      _toTransform = [\n        {\n          key: 'transform',\n          value: `rotateZ(90deg) rotateX(180deg) translateX(${gapFill}px)`\n        },\n        {\n          key: 'transform-origin',\n          value: 'center'\n        }\n      ];\n      break;\n    }\n    case 6: {\n      _toTransform = [\n        {\n          key: 'transform',\n          value: `rotateZ(90deg) translateX(${gapFill}px)`\n        },\n        {\n          key: 'transform-origin',\n          value: 'center'\n        }\n      ];\n      break;\n    }\n    case 7: {\n      _toTransform = [\n        {\n          key: 'transform',\n          value: `rotateZ(-90deg) rotateX(180deg) translateX(-${gapFill}px)`\n        },\n        {\n          key: 'transform-origin',\n          value: 'center'\n        }\n      ];\n      break;\n    }\n    case 8: {\n      _toTransform = [\n        {\n          key: 'transform',\n          value: `rotateZ(-90deg) translateX(-${gapFill}px)`\n        },\n        {\n          key: 'transform-origin',\n          value: 'center'\n        }\n      ];\n      break;\n    }\n  }\n  for(let attr of _toTransform) {\n    el.style[attr.key] = attr.value\n  }\n};\n\n\n/*\n  @ mark data-orientation\n */\nconst _markElementOrientation = (el, orientation) => {\n  let _orientationMark = orientation || 0;\n  el.setAttribute('data-orientation', _orientationMark)\n};\n\nexport {\n  getEXIFOrientation, toOrientationOne\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","/*!\n * imagesLoaded v4.1.4\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\n\n( function( window, factory ) { 'use strict';\n  // universal module definition\n\n  /*global define: false, module: false, require: false */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter'\n    ], function( EvEmitter ) {\n      return factory( window, EvEmitter );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('ev-emitter')\n    );\n  } else {\n    // browser global\n    window.imagesLoaded = factory(\n      window,\n      window.EvEmitter\n    );\n  }\n\n})( typeof window !== 'undefined' ? window : this,\n\n// --------------------------  factory -------------------------- //\n\nfunction factory( window, EvEmitter ) {\n\n'use strict';\n\nvar $ = window.jQuery;\nvar console = window.console;\n\n// -------------------------- helpers -------------------------- //\n\n// extend objects\nfunction extend( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n}\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nfunction makeArray( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n}\n\n// -------------------------- imagesLoaded -------------------------- //\n\n/**\n * @param {Array, Element, NodeList, String} elem\n * @param {Object or Function} options - if function, use as callback\n * @param {Function} onAlways - callback function\n */\nfunction ImagesLoaded( elem, options, onAlways ) {\n  // coerce ImagesLoaded() without new, to be new ImagesLoaded()\n  if ( !( this instanceof ImagesLoaded ) ) {\n    return new ImagesLoaded( elem, options, onAlways );\n  }\n  // use elem as selector string\n  var queryElem = elem;\n  if ( typeof elem == 'string' ) {\n    queryElem = document.querySelectorAll( elem );\n  }\n  // bail if bad element\n  if ( !queryElem ) {\n    console.error( 'Bad element for imagesLoaded ' + ( queryElem || elem ) );\n    return;\n  }\n\n  this.elements = makeArray( queryElem );\n  this.options = extend( {}, this.options );\n  // shift arguments if no options set\n  if ( typeof options == 'function' ) {\n    onAlways = options;\n  } else {\n    extend( this.options, options );\n  }\n\n  if ( onAlways ) {\n    this.on( 'always', onAlways );\n  }\n\n  this.getImages();\n\n  if ( $ ) {\n    // add jQuery Deferred object\n    this.jqDeferred = new $.Deferred();\n  }\n\n  // HACK check async to allow time to bind listeners\n  setTimeout( this.check.bind( this ) );\n}\n\nImagesLoaded.prototype = Object.create( EvEmitter.prototype );\n\nImagesLoaded.prototype.options = {};\n\nImagesLoaded.prototype.getImages = function() {\n  this.images = [];\n\n  // filter & find items if we have an item selector\n  this.elements.forEach( this.addElementImages, this );\n};\n\n/**\n * @param {Node} element\n */\nImagesLoaded.prototype.addElementImages = function( elem ) {\n  // filter siblings\n  if ( elem.nodeName == 'IMG' ) {\n    this.addImage( elem );\n  }\n  // get background image on element\n  if ( this.options.background === true ) {\n    this.addElementBackgroundImages( elem );\n  }\n\n  // find children\n  // no non-element nodes, #143\n  var nodeType = elem.nodeType;\n  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\n    return;\n  }\n  var childImgs = elem.querySelectorAll('img');\n  // concat childElems to filterFound array\n  for ( var i=0; i < childImgs.length; i++ ) {\n    var img = childImgs[i];\n    this.addImage( img );\n  }\n\n  // get child background images\n  if ( typeof this.options.background == 'string' ) {\n    var children = elem.querySelectorAll( this.options.background );\n    for ( i=0; i < children.length; i++ ) {\n      var child = children[i];\n      this.addElementBackgroundImages( child );\n    }\n  }\n};\n\nvar elementNodeTypes = {\n  1: true,\n  9: true,\n  11: true\n};\n\nImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    // Firefox returns null if in a hidden iframe https://bugzil.la/548397\n    return;\n  }\n  // get url inside url(\"...\")\n  var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\n  var matches = reURL.exec( style.backgroundImage );\n  while ( matches !== null ) {\n    var url = matches && matches[2];\n    if ( url ) {\n      this.addBackground( url, elem );\n    }\n    matches = reURL.exec( style.backgroundImage );\n  }\n};\n\n/**\n * @param {Image} img\n */\nImagesLoaded.prototype.addImage = function( img ) {\n  var loadingImage = new LoadingImage( img );\n  this.images.push( loadingImage );\n};\n\nImagesLoaded.prototype.addBackground = function( url, elem ) {\n  var background = new Background( url, elem );\n  this.images.push( background );\n};\n\nImagesLoaded.prototype.check = function() {\n  var _this = this;\n  this.progressedCount = 0;\n  this.hasAnyBroken = false;\n  // complete if no images\n  if ( !this.images.length ) {\n    this.complete();\n    return;\n  }\n\n  function onProgress( image, elem, message ) {\n    // HACK - Chrome triggers event before object properties have changed. #83\n    setTimeout( function() {\n      _this.progress( image, elem, message );\n    });\n  }\n\n  this.images.forEach( function( loadingImage ) {\n    loadingImage.once( 'progress', onProgress );\n    loadingImage.check();\n  });\n};\n\nImagesLoaded.prototype.progress = function( image, elem, message ) {\n  this.progressedCount++;\n  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;\n  // progress event\n  this.emitEvent( 'progress', [ this, image, elem ] );\n  if ( this.jqDeferred && this.jqDeferred.notify ) {\n    this.jqDeferred.notify( this, image );\n  }\n  // check if completed\n  if ( this.progressedCount == this.images.length ) {\n    this.complete();\n  }\n\n  if ( this.options.debug && console ) {\n    console.log( 'progress: ' + message, image, elem );\n  }\n};\n\nImagesLoaded.prototype.complete = function() {\n  var eventName = this.hasAnyBroken ? 'fail' : 'done';\n  this.isComplete = true;\n  this.emitEvent( eventName, [ this ] );\n  this.emitEvent( 'always', [ this ] );\n  if ( this.jqDeferred ) {\n    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';\n    this.jqDeferred[ jqMethod ]( this );\n  }\n};\n\n// --------------------------  -------------------------- //\n\nfunction LoadingImage( img ) {\n  this.img = img;\n}\n\nLoadingImage.prototype = Object.create( EvEmitter.prototype );\n\nLoadingImage.prototype.check = function() {\n  // If complete is true and browser supports natural sizes,\n  // try to check for image status manually.\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    // report based on naturalWidth\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    return;\n  }\n\n  // If none of the checks above matched, simulate loading on detached element.\n  this.proxyImage = new Image();\n  this.proxyImage.addEventListener( 'load', this );\n  this.proxyImage.addEventListener( 'error', this );\n  // bind to image as well for Firefox. #191\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.proxyImage.src = this.img.src;\n};\n\nLoadingImage.prototype.getIsImageComplete = function() {\n  // check for non-zero, non-undefined naturalWidth\n  // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671\n  return this.img.complete && this.img.naturalWidth;\n};\n\nLoadingImage.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.img, message ] );\n};\n\n// ----- events ----- //\n\n// trigger specified handler for event type\nLoadingImage.prototype.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nLoadingImage.prototype.onload = function() {\n  this.confirm( true, 'onload' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.onerror = function() {\n  this.confirm( false, 'onerror' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.unbindEvents = function() {\n  this.proxyImage.removeEventListener( 'load', this );\n  this.proxyImage.removeEventListener( 'error', this );\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\n// -------------------------- Background -------------------------- //\n\nfunction Background( url, element ) {\n  this.url = url;\n  this.element = element;\n  this.img = new Image();\n}\n\n// inherit LoadingImage prototype\nBackground.prototype = Object.create( LoadingImage.prototype );\n\nBackground.prototype.check = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.img.src = this.url;\n  // check if image is already complete\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    this.unbindEvents();\n  }\n};\n\nBackground.prototype.unbindEvents = function() {\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\nBackground.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.element, message ] );\n};\n\n// -------------------------- jQuery -------------------------- //\n\nImagesLoaded.makeJQueryPlugin = function( jQuery ) {\n  jQuery = jQuery || window.jQuery;\n  if ( !jQuery ) {\n    return;\n  }\n  // set local variable\n  $ = jQuery;\n  // $().imagesLoaded()\n  $.fn.imagesLoaded = function( options, callback ) {\n    var instance = new ImagesLoaded( this, options, callback );\n    return instance.jqDeferred.promise( $(this) );\n  };\n};\n// try making plugin\nImagesLoaded.makeJQueryPlugin();\n\n// --------------------------  -------------------------- //\n\nreturn ImagesLoaded;\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/imagesloaded/imagesloaded.js\n// module id = 4\n// module chunks = 0","/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ev-emitter/ev-emitter.js\n// module id = 5\n// module chunks = 0","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/exif-js/exif.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}