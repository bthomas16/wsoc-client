{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/thread-loader/dist/cjs.js!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/babel-loader/lib/index.js!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/src/components/Profile/Collection/Collection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/src/components/Profile/Collection/Collection.vue","mtime":1548215996382},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport SeeMoreModal from './Modals/SeeMoreModal.vue';\nimport AddWatchModal from './Modals/AddWatchModal.vue';\nimport WatchCollection from './WatchCollection.vue';\nimport ManageCollection from './ManageCollection.vue';\nimport { setTimeout } from 'timers';\nexport default {\n  components: {\n    seeMoreModal: SeeMoreModal,\n    addWatchModal: AddWatchModal,\n    watchCollection: WatchCollection,\n    manageCollection: ManageCollection\n  },\n  data: function data() {\n    return {\n      isChangedOrder: false,\n      addWatchCount: 1,\n      showDismissibleAlert: false,\n      isAddingWatch: false,\n      isEditingExistingWatch: false,\n      selectedWatch: {},\n      isSeeMore: false,\n      addWatch: {\n        src: {\n          images: []\n        }\n      },\n      addWatchImages: [],\n      isFeaturedWatch: false,\n      hasCollection: false,\n      searchTerms: ['brand', 'name', 'model', 'ref']\n    };\n  },\n  methods: _defineProperty({\n    selectWatch: function selectWatch(watch) {\n      this.selectedWatch = watch;\n      this.$refs.seeMoreModal.show();\n    },\n    editWatchModal: function editWatchModal(watch) {\n      this.addWatch = watch;\n      this.isAddingWatch = false;\n      this.isEditingExistingWatch = true;\n      this.addWatch.name = this.titleCase(watch.name);\n      this.addWatch.brand = this.titleCase(watch.brand);\n      this.$refs.addWatchModal.show();\n    },\n    OpenWotdSeeMore: function OpenWotdSeeMore(watchId) {\n      var watch = this.Collection.find(function (x) {\n        return x.id === watchId;\n      });\n      this.selectWatch(watch);\n    },\n    SelectRandomWatch: function SelectRandomWatch() {\n      var max = this.Collection.length;\n      var min = 0;\n      var index = Math.floor(Math.random() * (max - min) + min);\n      var randomWatch = this.Collection[index];\n      console.log('we out here', randomWatch);\n      this.selectWatch(randomWatch);\n    },\n    openWatchModal: function openWatchModal() {\n      this.$rers.addWatchModal.show();\n    },\n    addWatchModal: function addWatchModal() {\n      this.createAddWatch();\n      this.isAddingWatch = true;\n      this.isEditingExistingWatch = false;\n      this.$refs.addWatchModal.show();\n    },\n    resetWatchFormAndModals: function resetWatchFormAndModals() {\n      this.isAddingWatch = false;\n      this.isEditingExistingWatch = false;\n      this.$refs.addWatchModal.hide();\n      this.$refs.seeMoreModal.hide();\n      this.addWatch = this.addWatch;\n      this.addWatchCount = 1;\n    },\n    previewWatch: function previewWatch() {\n      if (this.addWatch.brand) {\n        this.addWatch.brand = this.addWatch.brand.toLowerCase();\n      }\n\n      this.addWatch.name = this.addWatch.name.toLowerCase();\n      console.log(this.addWatch);\n      this.selectedWatch = this.addWatch;\n      this.$refs.addWatchModal.hide();\n      this.$refs.seeMoreModal.show();\n    },\n    submitWatch: function submitWatch() {\n      this.isAddingWatch = false;\n      this.isEditingExistingWatch = false;\n      this.$refs.seeMoreModal.hide();\n\n      if (!this.addWatch.id) {\n        // watch doesnt exist yet, create new watch\n        this.$store.dispatch('submitNewWatch', this.addWatch);\n      } else {\n        // editing existing watch\n        this.$store.dispatch('submitEditWatch', this.addWatch);\n      }\n\n      this.createAddWatch(); // reset add watch to defaults\n\n      this.addWatchCount = 1; // resets watch count\n      // TODO: NOT THIS\n      //   setTimeout(() => {\n      //     this.$store.dispatch('getNumberFSOT')\n      //     this.$store.dispatch('loadUserCollection')\n      //   }, 500)\n    },\n    backToEditStart: function backToEditStart() {\n      this.addWatchCount = 1;\n      this.$refs.addWatchModal.show();\n      this.$refs.seeMoreModal.hide();\n    },\n    createAddWatch: function createAddWatch() {\n      var _this$addWatch;\n\n      this.addWatch = (_this$addWatch = {\n        src: {\n          images: []\n        },\n        brand: '',\n        name: '',\n        isForSale: false,\n        isForTrade: false,\n        isFullKit: false,\n        watchStyle: null\n      }, _defineProperty(_this$addWatch, \"watchStyle\", null), _defineProperty(_this$addWatch, \"accuracy\", null), _defineProperty(_this$addWatch, \"movement\", null), _defineProperty(_this$addWatch, \"movementType\", null), _defineProperty(_this$addWatch, \"sizeLugToLug\", null), _defineProperty(_this$addWatch, \"sizeWidth\", null), _defineProperty(_this$addWatch, \"sizeHeight\", null), _defineProperty(_this$addWatch, \"crystal\", null), _defineProperty(_this$addWatch, \"band\", ''), _defineProperty(_this$addWatch, \"model\", ''), _defineProperty(_this$addWatch, \"ref\", ''), _defineProperty(_this$addWatch, \"forSalePrice\", null), _defineProperty(_this$addWatch, \"forTradeValue\", null), _defineProperty(_this$addWatch, \"acquiredFor\", null), _defineProperty(_this$addWatch, \"dateAcquired\", ''), _this$addWatch);\n    },\n    orderChanged: function orderChanged() {\n      this.isChangedOrder = true;\n    },\n    titleCase: function titleCase(str) {\n      var splitStr = str.toLowerCase().split(' ');\n\n      for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n      }\n\n      return splitStr.join(' ');\n    }\n  }, \"titleCase\", function titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n\n    for (var i = 0; i < splitStr.length; i++) {\n      splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n\n    return splitStr.join(' ');\n  }),\n  computed: {\n    isLoading: function isLoading() {\n      return this.$store.state.isLoading;\n    },\n    getCollectionTotalValue: function getCollectionTotalValue() {\n      var val = 0;\n      this.Collection.forEach(function (x) {\n        if (x.forSalePrice) {\n          val += x.forSalePrice;\n        } else if (x.marketValue) {\n          val += x.marketValue;\n        } else if (x.marketValue) {\n          val += x.forTradeValue;\n        }\n      });\n\n      if (val > 0) {\n        return val;\n      } else {\n        return 'N/A';\n      }\n    },\n    User: function User() {\n      return this.$store.state.User;\n    },\n    // getWatchOfTheDay() {\n    //     let watchCollection = this.$store.getters.getCollection;\n    //     let randomId = Math.floor(Math.random() * Math.floor(watchCollection.length))\n    //     return watchCollection[randomId].name;\n    // },\n    Collection: function Collection() {\n      if (this.isManagingCollection) {\n        return this.$store.state.FilteredCollection;\n      } else return this.$store.state.Collection;\n    },\n    isManagingCollection: function isManagingCollection() {\n      return this.$store.state.isManagingCollection;\n    },\n    isUserLoaded: function isUserLoaded() {\n      return this.$store.state.isUserLoaded;\n    },\n    isCollectionLoaded: function isCollectionLoaded() {\n      return this.$store.state.isCollectionLoaded;\n    },\n    isFilteringCollection: function isFilteringCollection() {\n      return this.$store.state.isFilteringCollection;\n    },\n    WOTD: function WOTD() {\n      var Collection = this.$store.state.Collection;\n\n      if (Collection) {\n        var i = this.$store.state.cookieValueWOTD;\n        var c = this.$store.state.Collection[i];\n        return {\n          name: c.name,\n          id: c.id\n        };\n      } else {\n        return 'Add a Watch to your Collection!';\n      }\n    }\n  },\n  created: function created() {\n    this.$store.dispatch('loadUserCollection');\n    this.$store.dispatch('getFavorites');\n  }\n};",null]}