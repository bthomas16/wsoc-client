{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/thread-loader/dist/cjs.js!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/babel-loader/lib/index.js!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/DraggableWatchCollection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/DraggableWatchCollection.vue","mtime":1548879689285},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n\nvar _computed;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport draggable from 'vuedraggable';\nimport RemoveWatchModal from './Modals/RemoveWatchModal.vue';\nimport SeeRemovedWatchModal from './Modals/SeeRemovedWatchModal.vue';\nimport WatchFlags from './WatchFlags.vue';\nimport ShareFlag from './ShareFlag.vue';\nexport default {\n  name: 'draggableWatchCollection',\n  components: {\n    draggable: draggable,\n    seeRemovedWatchModal: SeeRemovedWatchModal,\n    removeWatchModal: RemoveWatchModal,\n    watchFlags: WatchFlags,\n    shareFlag: ShareFlag\n  },\n  data: function data() {\n    return {\n      addWatchDragOptions: {\n        dropzoneSelector: '.dropzone',\n        draggableSelector: '.watch',\n        showDropzoneAreas: true\n      },\n      ROOT_API: process.env.VUE_APP_ROOT_API,\n      drag: false,\n      emptyHeart: process.env.VUE_APP_ROOT_API + '/api/static-assets/empty-heart.png',\n      fullHeart: process.env.VUE_APP_ROOT_API + '/api/static-assets/full-heart.png',\n      showFlags: true,\n      removedWatchToSeeReasons: null,\n      removedWatchToSee: null,\n      // DRAGABLE PROPERTIES\n      watchToRemove: null,\n      reasonsWatchMoved: {\n        receivedBy: null,\n        typeMoved: null,\n        value: null,\n        trades: []\n      },\n      draggingId: '',\n      isAnimate: true,\n      TestArray: ['option1', 'option2', 'option3', 'option4']\n    };\n  },\n  methods: _defineProperty({\n    smSizeCardUse: function smSizeCardUse() {\n      this.smSizeCard = 2;\n      this.mdSizeCard = 3;\n    },\n    mdSizeCardUse: function mdSizeCardUse() {\n      this.smSizeCard = 6;\n      this.mdSizeCard = 6;\n    },\n    lgSizeCardUse: function lgSizeCardUse() {\n      this.smSizeCard = 12;\n      this.mdSizeCard = 12;\n    },\n    startDrag: function startDrag(e) {\n      this.drag = true;\n      this.draggingId = e.item.id;\n    },\n    endDrag: function endDrag(e) {\n      var _this = this;\n\n      this.drag = false;\n      this.isAnimate = false;\n      setTimeout(function () {\n        _this.isAnimate = true;\n      }, 400);\n    },\n    orderChanged: function orderChanged() {\n      this.$emit('orderChanged');\n    },\n    resetReasonsWatchMoved: function resetReasonsWatchMoved() {\n      this.reasonsWatchMoved = {\n        receivedBy: null,\n        typeMoved: null,\n        value: null,\n        trades: []\n      };\n    },\n    selectWatch: function selectWatch(watch) {\n      this.$emit('selectWatch', watch);\n    },\n    editWatch: function editWatch(watch) {\n      this.$emit('editWatchModal', watch);\n    },\n    // Remove a watch From Collection\n    removeWatchModal: function removeWatchModal(watch) {\n      this.watchToRemove = watch;\n      this.$refs.removeWatchModal.show();\n    },\n    openModal: function openModal() {\n      this.$refs.removedWatchModal.show();\n    },\n    // View a watch that has been removed from collection\n    removedWatchModal: function removedWatchModal(watch) {\n      this.removedWatchToSee = watch;\n      this.$refs.removedWatchModal.show();\n    },\n    submitRemoveWatchForm: function submitRemoveWatchForm() {\n      var _this2 = this;\n\n      var watchDetails = {\n        watchToRemove: this.watchToRemove,\n        reasonsWatchMoved: this.reasonsWatchMoved\n      };\n      this.$store.dispatch('createRemoveWatch', watchDetails);\n      this.$store.dispatch('removeExistingWatch', this.watchToRemove.id).then(function () {\n        // TODO: NOT THIS\n        setTimeout(function () {\n          _this2.resetReasonsWatchMoved();\n\n          _this2.$store.dispatch('getNumberFSOT');\n\n          _this2.$store.dispatch('loadUserCollection');\n\n          _this2.$refs.removeWatchModal.hide();\n        }, 1);\n      });\n    },\n    favoriteToggle: function favoriteToggle(watchId) {\n      this.$store.dispatch('toggleWatchFavorite', watchId);\n    },\n    isFavoriteWatch: function isFavoriteWatch(watchId) {\n      if (this.Favorites) {\n        var found = this.Favorites.find(function (w) {\n          return w.watch_id == watchId;\n        });\n        if (found) return true;else return false;\n      }\n    },\n    truncatedWatchName: function truncatedWatchName(name, lengthToTruncate) {\n      if (name.length > lengthToTruncate) {\n        return name.substring(0, lengthToTruncate) + '...';\n      } else {\n        return name;\n      }\n    },\n    titleCase: function titleCase(str) {\n      var splitStr = str.toLowerCase().split(' ');\n\n      for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n      }\n\n      return splitStr.join(' ');\n    }\n  }, \"truncatedWatchName\", function truncatedWatchName(name, lengthToTruncate) {\n    if (name.length > lengthToTruncate) {\n      return name.substring(0, lengthToTruncate) + '...';\n    } else {\n      return name;\n    }\n  }),\n  computed: (_computed = {\n    Favorites: function Favorites() {\n      return this.$store.state.Favorites;\n    },\n    isFilteringCollection: function isFilteringCollection() {\n      return this.$store.state.isFilteringCollection;\n    },\n    currentTruncatedLength: function currentTruncatedLength() {\n      var val;\n      var currentButtonState = this.$store.state.CurrentCardSize;\n\n      switch (currentButtonState) {\n        case 'sm':\n          val = 8;\n          break;\n\n        case 'md':\n          val = 12;\n          break;\n\n        case 'lg':\n          val = 18;\n          break;\n\n        default:\n          val = 8;\n      }\n\n      return val;\n    },\n    currentCardSize: function currentCardSize() {\n      return this.$store.state.CurrentCardSize;\n    },\n    Collection: {\n      set: function set(newCollectionOrder) {\n        if (!this.isManagingCollection) {\n          this.$store.dispatch('isTryingShuffleWhileManage', false);\n          return this.$store.dispatch('updateCollectionOrder', newCollectionOrder);\n        } else {\n          this.$store.dispatch('isTryingShuffleWhileManage', true);\n        }\n      },\n      get: function get() {\n        if (this.isManagingCollection) {\n          return this.$store.state.FilteredCollection;\n        } else {\n          return this.$store.state.Collection;\n        }\n      }\n    }\n  }, _defineProperty(_computed, \"isFilteringCollection\", function isFilteringCollection() {\n    return this.$store.state.FilteredCollection;\n  }), _defineProperty(_computed, \"isManagingCollection\", function isManagingCollection() {\n    return this.$store.state.isManagingCollection;\n  }), _defineProperty(_computed, \"isViewingPreviousWatches\", function isViewingPreviousWatches() {\n    return this.$store.state.isViewingPreviousWatches;\n  }), _defineProperty(_computed, \"isShowFlags\", function isShowFlags() {\n    return this.$store.state.isShowFlags;\n  }), _defineProperty(_computed, \"isShowEditFlags\", function isShowEditFlags() {\n    return this.$store.state.isShowEditFlags;\n  }), _defineProperty(_computed, \"currentCardSize\", function currentCardSize() {\n    return this.$store.state.CurrentCardSize;\n  }), _defineProperty(_computed, \"smSizeCard\", function smSizeCard() {\n    return this.$store.state.MobileCardSizeToUse;\n  }), _defineProperty(_computed, \"mdSizeCard\", function mdSizeCard() {\n    return this.$store.state.DesktopCardSizeToUse;\n  }), _computed)\n};",null]}