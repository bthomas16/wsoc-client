{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/babel-loader/lib/index.js!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/FileSelector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/FileSelector.vue","mtime":1551730797232},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":1548990847448},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/babel-loader/lib/index.js","mtime":1548990846981},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":1548990847448},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js","mtime":1548990850526}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'fileSelector',\n  props: {\n    value: File,\n    isPreviewBox: Boolean\n  },\n  data: function data() {\n    return {\n      ROOT_API: process.env.VUE_APP_ROOT_API,\n      isS3Uploading: false,\n      imgBase64Array: []\n    };\n  },\n  methods: {\n    uploadImagesToBase64: function () {\n      var _uploadImagesToBase = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(e) {\n        var vm, files, j;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                vm = this;\n                files = e.target.files;\n                j = 0;\n\n              case 3:\n                if (!(j < files.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 6;\n                return vm.getBase64Url(files[j]).then(function (fileB64Obj) {\n                  vm.imgBase64Array.push(fileB64Obj);\n\n                  if (vm.imgBase64Array.length == files.length) {\n                    vm.$emit('setImagesOnAddWatch', vm.imgBase64Array); // vm.$refs.fileUpload.value = ''\n\n                    vm.imgBase64Array = [];\n                  }\n                });\n\n              case 6:\n                j++;\n                _context.next = 3;\n                break;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function uploadImagesToBase64(_x) {\n        return _uploadImagesToBase.apply(this, arguments);\n      }\n\n      return uploadImagesToBase64;\n    }(),\n    getBase64Url: function getBase64Url(file) {\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = function (e) {\n          // let fileExtension = file.src.split(\";\")[0].split(\"/\")\n          // fileExtension = fileExtension[fileExtension.length - 1]\n          var fileB64Obj = {\n            src: reader.result,\n            fileName: file.name // fileExtension: fileExtension\n\n          };\n          resolve(fileB64Obj);\n        };\n\n        reader.onerror = function (error) {\n          return reject(error);\n        };\n      });\n    }\n  } // FR.onload = function(e) {\n  //     let result = e.target.result\n  //     let imgBase64Url = e.target.result\n  //     vm.imgBase64Array.push(\n  //         { imgBase64Url,\n  //           order: index,\n  //           fileName: files[index].name\n  //         })\n  //     if (vm.imgBase64Array.length == files.length) {\n  //         vm.$emit('setImagesOnAddWatch', vm.imgBase64Array)\n  //     }\n  // }\n\n};",{"version":3,"sources":["FileSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,IADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,OAAA,CAAA,GAAA,CAAA,gBADA;AAEA,MAAA,aAAA,EAAA,KAFA;AAGA,MAAA,cAAA,EAAA;AAHA,KAAA;AAKA,GAZA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,oBADA;AAAA;AAAA;AAAA,+CACA,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,EAFA,GAEA,IAFA;AAIA,gBAAA,KAJA,GAIA,CAAA,CAAA,MAAA,CAAA,KAJA;AAMA,gBAAA,CANA,GAMA,CANA;;AAAA;AAAA,sBAMA,CAAA,GAAA,KAAA,CAAA,MANA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOA,EAAA,CAAA,YAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,UAAA,UAAA,EAAA;AAEA,kBAAA,EAAA,CAAA,cAAA,CAAA,IAAA,CAAA,UAAA;;AAEA,sBAAA,EAAA,CAAA,cAAA,CAAA,MAAA,IAAA,KAAA,CAAA,MAAA,EAAA;AACA,oBAAA,EAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,EAAA,CAAA,cAAA,EADA,CAEA;;AACA,oBAAA,EAAA,CAAA,cAAA,GAAA,EAAA;AACA;AACA,iBATA,CAPA;;AAAA;AAMA,gBAAA,CAAA,EANA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqBA,IAAA,YArBA,wBAqBA,IArBA,EAqBA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,YAAA,MAAA,GAAA,IAAA,UAAA,EAAA;AACA,QAAA,MAAA,CAAA,aAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,EAAA;AACA;AACA;AAEA,cAAA,UAAA,GAAA;AACA,YAAA,GAAA,EAAA,MAAA,CAAA,MADA;AAEA,YAAA,QAAA,EAAA,IAAA,CAAA,IAFA,CAGA;;AAHA,WAAA;AAMA,UAAA,OAAA,CAAA,UAAA,CAAA;AACA,SAXA;;AAYA,QAAA,MAAA,CAAA,OAAA,GAAA,UAAA,KAAA;AAAA,iBAAA,MAAA,CAAA,KAAA,CAAA;AAAA,SAAA;AACA,OAhBA,CAAA;AAiBA;AAvCA,GAdA,CA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArEA,CAAA","sourcesContent":["<template>\n    <b-container>\n        <b-row>\n            <b-col cols=\"3\" md=\"2\" class=\"left bg-white p-0 mt-1 mt-sm-2 mt-md-4 mt-lg-0 border box-shadow imgTile\" v-if=\"isPreviewBox\">\n                <label class=\"file-select\">\n                    <!-- We can't use a normal button element here, as it would become the target of the label. -->\n                    <div class=\"select-button pointer bg-white\">\n                    <!-- Display the filename if a file has been selected. -->\n                        <b-img class=\"\" :src=\"ROOT_API + '/api/static-assets/add-img-icon.png'\" fluid></b-img>\n                    </div>\n                    <!-- Now, the file input that we hide. -->\n                    <input type=\"file\" @change=\"uploadImagesToBase64\" accept=\"image/*\" multiple/>\n                </label>\n            </b-col>\n           <b-col cols=\"8\" md=\"6\" class=\"mx-auto center h5\" v-else>\n                <label class=\"file-select\">\n                    <!-- We can't use a normal button element here, as it would become the target of the label. -->\n                    <div class=\"select-button pointer bg-light-blue\">\n                    <!-- Display the filename if a file has been selected. -->\n                    <span>Select Images</span>\n                    </div>\n                    <!-- Now, the file input that we hide. -->\n                    <input type=\"file\" @change=\"uploadImagesToBase64\" accept=\"image/*\" multiple/>\n                </label>\n            </b-col>\n        </b-row>\n    </b-container>\n</template>\n\n<script>\nexport default {\n  name: 'fileSelector',\n  props: {\n    value: File,\n    isPreviewBox: Boolean\n  },\n  data: function () {\n    return {\n      ROOT_API: process.env.VUE_APP_ROOT_API,\n      isS3Uploading: false,\n      imgBase64Array: []\n    }\n  },\n\n  methods: {\n        async uploadImagesToBase64 (e) {\n            const vm = this\n\n            let files = e.target.files\n\n            for (let j = 0; j < files.length; j++) {\n                await vm.getBase64Url(files[j]).then(fileB64Obj => {\n\n                    vm.imgBase64Array.push(fileB64Obj)\n\n                    if (vm.imgBase64Array.length == files.length) {\n                        vm.$emit('setImagesOnAddWatch', vm.imgBase64Array)\n                        // vm.$refs.fileUpload.value = ''\n                        vm.imgBase64Array = []    \n                    }\n                })\n            }\n        },\n\n\n        getBase64Url (file) {\n            return new Promise((resolve, reject) => {\n                let reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = (e) => {\n                    // let fileExtension = file.src.split(\";\")[0].split(\"/\")\n                    // fileExtension = fileExtension[fileExtension.length - 1]\n\n                    let fileB64Obj = {\n                        src: reader.result,\n                        fileName: file.name,\n                        // fileExtension: fileExtension\n                    }\n\n                    resolve(fileB64Obj);\n                }\n                reader.onerror = error => reject(error);\n            });\n        }\n    },\n\n\n\n    // FR.onload = function(e) {\n                    //     let result = e.target.result\n                    //     let imgBase64Url = e.target.result\n                    //     vm.imgBase64Array.push(\n                    //         { imgBase64Url,\n                    //           order: index,\n                    //           fileName: files[index].name\n                    //         })\n                    //     if (vm.imgBase64Array.length == files.length) {\n                    //         vm.$emit('setImagesOnAddWatch', vm.imgBase64Array)\n                    //     }\n                    // }\n            \n\n    \n\n}\n</script>\n\n<style scoped>\n       label {\n           margin: 0;\n       }                 /* <b-col cols=\"5\" md=\"3\"  v-if=\"!addWatch.src.images.length\"> */\n\n    .file-select > .select-button {\n        padding: 1rem;\n\n        color: white;\n\n        border-radius: .3rem;\n\n        text-align: center;\n        font-weight: bold;\n    }\n\n    /* Don't forget to hide the original file input! */\n    .file-select > input[type=\"file\"] {\n        display: none;\n    }\n</style>\n"],"sourceRoot":"src/components/Profile/Collection"}]}