{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Auth/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Auth/Register.vue","mtime":1550974111507},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":1548990847448},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/babel-loader/lib/index.js","mtime":1548990846981},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":1548990847448},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js","mtime":1548990850526}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nexport default {\n  name: 'register',\n  data () {\n    return {\n      ROOT_API: process.env.VUE_APP_ROOT_API,\n      form: {\n        email: '',\n        firstName: '',\n        lastName: '',\n        password: ''\n      },\n      card: 1,\n      showAlert: false,\n      responseMessage: '',\n      responseStyle: 'light',\n      isRefreshPage: false,\n      showForm: true,\n      passwordErrMsg: '',\n      formValid: true\n    }\n  },\n  methods: {\n    onSubmit () {\n      this.showAlert = false\n      this.form.email.toLowerCase()\n      this.$emit('toggleAuthLoading', true)\n      this.$store.dispatch('register', this.form)\n        .then((res) => {\n          if (res.isSuccess) {\n            // PWA SHIT\n            if (this.$store.state.DelayPrompt) {\n                this.$store.state.DelayPrompt.prompt()\n    \n                this.$store.state.DelayPrompt.userChoice.then(selection => {\n                if (selection.outcome === 'accepted') {\n                    this.$ga.event({\n                        eventCategory: 'PWA Banner Prompt',\n                        eventAction: 'Accept Banner',\n                    })\n                } else {\n                    this.$ga.event({\n                        eventCategory: 'PWA Banner Prompt',\n                        eventAction: 'Decline Banner',\n                    })\n                }\n              })\n            }\n\n            this.$emit('toggleAuthLoading', false)\n            this.$store.dispatch('sendWelcomeEmail', this.form)\n            this.$router.push({ path: '/profile' })\n          } else {\n            this.$emit('toggleAuthLoading', false)\n            this.showAlert = true\n            this.responseMessage = res.message\n            this.responseStyle = 'danger'\n            this.isRefreshPage = res.isRefreshPage\n            this.$emit('ToggleShowingAlert', true)          \n            \n          }\n        }).catch(err => {\n          this.showAlert = true\n          this.responseMessage = err.message\n          this.responseStyle = 'danger'\n          this.$emit('ToggleShowingAlert', true)          \n          \n        })\n    },\n\n    toggleAuthChild () {\n      this.$emit('ToggleShowingAlert', false)  \n      this.$emit('toggleAuthView')\n    },\n\n    validateEmail (email) {\n      // regex expression making sure email is in valid format\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      if (re.test(email)) {\n        return true\n      } else {\n        this.form.password = ''\n        return re.test(email)\n      }\n    },\n\n    validatePassword (password) {\n      if (password.length < 4) {\n        this.passwordErrMsg = 'Password must be at least 4 characters'\n        return false\n      } else {\n        this.passwordErrMsg = ''\n        return true\n      }\n    },\n\n    validateNames (first, last) {\n      if (first.length && last.length) return true\n      else return false\n    },\n\n    reloadPage () {\n      location.reload()\n    }\n\n    // isDuplicateEmail(email)\n    // {\n    //     console.log('should check', email)\n    //     axios.get('/api/user/isDuplicateEmail?email=' + email).then(res => {\n    //         console.log(res)\n    //     })\n    // }\n  }\n}\n",null]}