{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/NonDraggableWatchCollection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/NonDraggableWatchCollection.vue","mtime":1551742742111},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":1548990847448},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/babel-loader/lib/index.js","mtime":1548990846981},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":1548990847448},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js","mtime":1548990850526}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport draggable from 'vuedraggable'\nimport RemoveWatchModal from './Modals/RemoveWatchModal.vue'\nimport SeeRemovedWatchModal from './Modals/SeeRemovedWatchModal.vue'\nimport WatchFlags from './WatchFlags.vue'\nimport ShareFlag from './ShareFlag.vue'\n\nexport default {\n  name: 'nonDraggableWatchCollection',\n  components: {\n    draggable,\n    seeRemovedWatchModal: SeeRemovedWatchModal,\n    removeWatchModal: RemoveWatchModal,\n    watchFlags: WatchFlags,\n    shareFlag: ShareFlag\n  },\n\n  data () {\n    return {\n\n      ROOT_API: process.env.VUE_APP_ROOT_API,\n      drag: false,\n      emptyHeart: process.env.VUE_APP_ROOT_API + '/api/static-assets/empty-heart.png',\n      fullHeart: process.env.VUE_APP_ROOT_API + '/api/static-assets/full-heart.png',\n      showFlags: true,\n      removedWatchToSeeReasons: null,\n      removedWatchToSee: null,\n      // DRAGABLE PROPERTIES\n\n      watchToRemove: null,\n      reasonsWatchMoved: {\n        receivedBy: '',\n        typeMoved: '',\n        value: 0,\n        trades: []\n      },\n\n      draggingId: '',\n      isAnimate: true,\n      TestArray: [\n        'option1',\n        'option2',\n        'option3',\n        'option4'\n      ]\n    }\n  },\n  methods: {\n    smSizeCardUse () {\n      this.smSizeCard = 2\n      this.mdSizeCard = 3\n    },\n\n    mdSizeCardUse () {\n      this.smSizeCard = 6\n      this.mdSizeCard = 6\n    },\n\n    lgSizeCardUse () {\n      this.smSizeCard = 12\n      this.mdSizeCard = 12\n    },\n\n    orderChanged () {\n      this.$emit('orderChanged')\n    },\n\n    resetReasonsWatchMoved () {\n      this.reasonsWatchMoved = {\n        receivedBy: null,\n        typeMoved: null,\n        value: 0,\n        trades: []\n      }\n    },\n\n    selectWatch (watch) {\n      this.$emit('selectWatch', watch)\n    },\n\n    editWatch (watch) {\n      this.$emit('editWatchModal', watch)\n    },\n\n    // Remove a watch From Collection\n    removeWatchModal (watch) {\n      this.watchToRemove = watch\n      this.$refs.removeWatchModal.show()\n    },\n\n    openModal () {\n      this.$refs.removedWatchModal.show()\n    },\n\n    // View a watch that has been removed from collection\n    removedWatchModal (watch) {\n      this.removedWatchToSee = watch\n      this.$refs.removedWatchModal.show()\n    },\n\n    submitRemoveWatchForm () {\n      let watchDetails = { watchToRemove: this.watchToRemove, reasonsWatchMoved: this.reasonsWatchMoved }\n      this.$store.dispatch('createRemoveWatch', watchDetails)\n      this.$store.dispatch('removeExistingWatch', this.watchToRemove.id).then(() => {\n          this.resetReasonsWatchMoved()\n          this.$refs.removeWatchModal.hide()\n          this.$store.dispatch('toggleIsManagingCollection')\n\n        //   if (!this.Collection[0]) {\n        //       console.log('toggggglin')\n        //       this.$store.dispatch('toggleIsManagingCollection')\n        //       this.$store.dispatch('toggleIsDragToOrganize', false)\n        //       this.$store.dispatch('viewingPreviousWatches', false)\n        //   }\n      })\n    },\n\n    favoriteToggle (watchId) {\n      this.$store.dispatch('toggleWatchFavorite', watchId)\n    },\n\n    isFavoriteWatch (watchId) {\n      if (this.Favorites) {\n        let found = this.Favorites.find((w) => {\n          return w.watch_id == watchId\n        })\n        if (found) return true\n        else return false\n      }\n    },\n\n    truncatedWatchName (name, lengthToTruncate) {\n      if (name.length > lengthToTruncate) {\n        return name.substring(0, lengthToTruncate) + '...'\n      } else { return name }\n    },\n\n\n    titleCase (str) {\n      var splitStr = str.toLowerCase().split(' ')\n      for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\n      }\n      return splitStr.join(' ')\n    }\n  },\n\n  computed: {\n    Favorites () {\n      return this.$store.state.Favorites\n    },\n\n    isFilteringCollection () {\n      return this.$store.state.isFilteringCollection\n    },\n\n     currentTruncatedLength () {\n      let val;\n      let currentButtonState = this.$store.state.CurrentCardSize\n      switch (currentButtonState) {\n        case 'sm':\n          val = 8\n          break\n        case 'md':\n          val = 12\n          break\n        case 'lg':\n          val = 18\n          break\n        default:\n          val = 8\n      }\n    return val      \n    },\n\n    currentCardSize() {\n        return this.$store.state.CurrentCardSize\n    },\n\n    FilteredCollection () {\n        return this.$store.state.FilteredCollection\n    },\n\n    Collection: {\n        get () {\n            if (this.isManagingCollection) {\n                return this.$store.state.FilteredCollection\n            } else {\n                return this.$store.state.Collection\n            }\n        },\n        set (newCollectionOrder) {\n            if (!this.isManagingCollection) {\n                this.$store.dispatch('isTryingShuffleWhileManage', false)            \n                return this.$store.dispatch('updateCollectionOrder', newCollectionOrder)\n            } else {\n                this.$store.dispatch('isTryingShuffleWhileManage', true)\n            }\n      }\n    },\n\n    isFilteringCollection () {\n      return this.$store.state.FilteredCollection\n    },\n\n    isManagingCollection () {\n      return this.$store.state.isManagingCollection\n    },\n\n    isViewingPreviousWatches () {\n      return this.$store.state.isViewingPreviousWatches\n    },\n\n    isShowFlags () {\n      return this.$store.state.isShowFlags\n    },\n\n    isShowEditFlags () {\n      return this.$store.state.isShowEditFlags\n    },\n\n    currentCardSize () {\n      return this.$store.state.CurrentCardSize\n    },\n\n    smSizeCard () {\n      return this.$store.state.MobileCardSizeToUse\n    },\n\n    mdSizeCard () {\n      return this.$store.state.DesktopCardSizeToUse\n    }\n  },\n}\n",{"version":3,"sources":["NonDraggableWatchCollection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"NonDraggableWatchCollection.vue","sourceRoot":"src/components/Profile/Collection","sourcesContent":["<template>\n    <b-container fluid>\n        <transition-group name=\"swap-list\">\n            <b-col :cols=\"smSizeCard\" :md=\"mdSizeCard\" class=\"left p-half\" v-for=\"watch in Collection\" :key=\"watch.id\" :id=\"watch.id\">\n                <b-row align-v=\"start\" align-h=\"around\" class=\"watch mb-1\" no-gutters>\n                    <!-- // Share Flag -->\n                    <share-flag :watchId=\"watch.id\"></share-flag>\n                    \n                    <watch-flags\n                        :watch=\"watch\"\n                        :isShowFlags=\"isShowFlags\"\n                        :isShowEditFlags=\"isShowEditFlags\"\n                        :isManagingCollection=\"isManagingCollection\"\n                        v-on:editWatch=\"editWatch\"\n                        v-on:removeWatchModal=\"removeWatchModal\"\n                        v-on:removedWatchModal=\"removedWatchModal\">\n                    </watch-flags>\n\n                    <!-- // WATCH // -->\n                    <b-col cols=\"12\" class=\"watch-wrapper order-1 box-shadow p-0\">\n                        <b-row class=\"center \" align-v=\"center\" align-h=\"start\" no-gutters>\n                            <b-col cols=\"12\">\n                                <b-row no-gutters>\n                                    <b-img \n                                        v-if=\"!isViewingPreviousWatches\" \n                                        :src=\"isFavoriteWatch(watch.id) ? fullHeart : emptyHeart\"\n                                        @click=\"favoriteToggle(watch.id)\"\n                                        class=\"pointer absolute r-0 r0 mr-1 right-align right\" \n                                        :class=\"currentCardSize == 'sm' ? 'smallHeartIcon' : 'heartIcon'\">\n                                        </b-img>\n                                    <b-col cols=\"12\" md=\"5\" class=\"m-0\" :class=\"(currentCardSize == 'sm') ? 'watchImgWrapper_Sm' : (currentCardSize == 'md') ? 'watchImgWrapper_Md' : (currentCardSize == 'lg') ? 'watchImgWrapper_Lg' : 'watchImgWrapper_Sm'\">\n                                        <b-img\n                                            crossorigin=\"anonymous\"\n                                            v-if=\"watch.src.images[0]\"\n                                            @click=\"isViewingPreviousWatches ?  removedWatchModal(watch) : selectWatch(watch)\"\n                                            :src=\"watch.src.images[0].src\"\n                                            class=\"watchImg pointer h-100\">\n                                        </b-img>\n                                    </b-col>\n                                    <b-col cols=\"12\" md=\"7\" class=\"d-none d-md-block m-0 bg-gray relative\">\n                                        <ul class=\"pl-1 pl-md-3 p-0 mb-1 absolute b-0 black left-align specs\">\n                                            <li>{{truncatedWatchName(titleCase(watch.brand), currentTruncatedLength)}}</li>\n                                            <li>{{truncatedWatchName(titleCase(watch.name), currentTruncatedLength)}}</li>\n                                            <li v-if=\"watch.sizeWidth && watch.sizeHeight && currentCardSize != 'sm'\">{{watch.sizeWidth}}mm x {{watch.sizeHeight}}mm</li>\n                                            <li v-if=\"watch.sizeWidth && !watch.sizeHeight && currentCardSize != 'sm'\">{{watch.sizeWidth}}mm</li>\n                                            <li v-if=\"currentCardSize != 'sm'\" class=\"h5 my-1\">{{watch.movement}}</li>\n                                        </ul>\n                                    </b-col>\n                                </b-row>\n                                \n                            </b-col>\n                        </b-row>\n                    </b-col>\n                </b-row>\n            </b-col>\n        </transition-group>\n\n        <b-modal\n            id=\"remove-watch-modal\"\n            ref=\"removeWatchModal\"\n            class=\"modalIndex\"\n            size=\"lg\">\n\n            <div class=\"no-bg-touch-modal\"></div>\n\n            <b-row slot=\"modal-title\" no-gutters v-if=\"watchToRemove\" class=\"red\">Removing &nbsp; <strong class=\"black\">{{ titleCase(watchToRemove.name)}}</strong></b-row>\n            <div slot=\"modal-header-close\" class=\"w-100 mt-1\" @click=\"resetReasonsWatchMoved\">X</div>\n            <remove-watch-modal :watchToRemove=\"watchToRemove\" :reasonsWatchMoved=\"reasonsWatchMoved\"></remove-watch-modal>\n            <b-row slot=\"modal-footer\" class=\"p-2\" no-gutters>\n                <b-btn class=\"bg-red white mx-2\" variant=\"default\" :disabled=\"reasonsWatchMoved.typeMoved == null\" @click=\"submitRemoveWatchForm\">Remove Watch</b-btn>\n            </b-row>\n        </b-modal>\n\n        <b-modal\n            id=\"removed-watch-modal\"\n            ref=\"removedWatchModal\"\n            size=\"lg\" \n            class=\"modalIndex\"\n            lazy>\n\n            <div class=\"no-bg-touch-modal\"></div>\n            \n            <b-row slot=\"modal-title\" no-gutters v-if=\"removedWatchToSee\" class=\"red\">Removed <strong class=\"black\"> &nbsp;{{ titleCase(removedWatchToSee.name)}}</strong></b-row>\n            <div slot=\"modal-header-close\" class=\"w-100 mt-1\">X</div>\n             <see-removed-watch-modal :removedWatchToSee=\"removedWatchToSee\"></see-removed-watch-modal>\n        </b-modal>\n\n    </b-container>\n</template>\n\n<script>\nimport axios from 'axios'\nimport draggable from 'vuedraggable'\nimport RemoveWatchModal from './Modals/RemoveWatchModal.vue'\nimport SeeRemovedWatchModal from './Modals/SeeRemovedWatchModal.vue'\nimport WatchFlags from './WatchFlags.vue'\nimport ShareFlag from './ShareFlag.vue'\n\nexport default {\n  name: 'nonDraggableWatchCollection',\n  components: {\n    draggable,\n    seeRemovedWatchModal: SeeRemovedWatchModal,\n    removeWatchModal: RemoveWatchModal,\n    watchFlags: WatchFlags,\n    shareFlag: ShareFlag\n  },\n\n  data () {\n    return {\n\n      ROOT_API: process.env.VUE_APP_ROOT_API,\n      drag: false,\n      emptyHeart: process.env.VUE_APP_ROOT_API + '/api/static-assets/empty-heart.png',\n      fullHeart: process.env.VUE_APP_ROOT_API + '/api/static-assets/full-heart.png',\n      showFlags: true,\n      removedWatchToSeeReasons: null,\n      removedWatchToSee: null,\n      // DRAGABLE PROPERTIES\n\n      watchToRemove: null,\n      reasonsWatchMoved: {\n        receivedBy: '',\n        typeMoved: '',\n        value: 0,\n        trades: []\n      },\n\n      draggingId: '',\n      isAnimate: true,\n      TestArray: [\n        'option1',\n        'option2',\n        'option3',\n        'option4'\n      ]\n    }\n  },\n  methods: {\n    smSizeCardUse () {\n      this.smSizeCard = 2\n      this.mdSizeCard = 3\n    },\n\n    mdSizeCardUse () {\n      this.smSizeCard = 6\n      this.mdSizeCard = 6\n    },\n\n    lgSizeCardUse () {\n      this.smSizeCard = 12\n      this.mdSizeCard = 12\n    },\n\n    orderChanged () {\n      this.$emit('orderChanged')\n    },\n\n    resetReasonsWatchMoved () {\n      this.reasonsWatchMoved = {\n        receivedBy: null,\n        typeMoved: null,\n        value: 0,\n        trades: []\n      }\n    },\n\n    selectWatch (watch) {\n      this.$emit('selectWatch', watch)\n    },\n\n    editWatch (watch) {\n      this.$emit('editWatchModal', watch)\n    },\n\n    // Remove a watch From Collection\n    removeWatchModal (watch) {\n      this.watchToRemove = watch\n      this.$refs.removeWatchModal.show()\n    },\n\n    openModal () {\n      this.$refs.removedWatchModal.show()\n    },\n\n    // View a watch that has been removed from collection\n    removedWatchModal (watch) {\n      this.removedWatchToSee = watch\n      this.$refs.removedWatchModal.show()\n    },\n\n    submitRemoveWatchForm () {\n      let watchDetails = { watchToRemove: this.watchToRemove, reasonsWatchMoved: this.reasonsWatchMoved }\n      this.$store.dispatch('createRemoveWatch', watchDetails)\n      this.$store.dispatch('removeExistingWatch', this.watchToRemove.id).then(() => {\n          this.resetReasonsWatchMoved()\n          this.$refs.removeWatchModal.hide()\n          this.$store.dispatch('toggleIsManagingCollection')\n\n        //   if (!this.Collection[0]) {\n        //       console.log('toggggglin')\n        //       this.$store.dispatch('toggleIsManagingCollection')\n        //       this.$store.dispatch('toggleIsDragToOrganize', false)\n        //       this.$store.dispatch('viewingPreviousWatches', false)\n        //   }\n      })\n    },\n\n    favoriteToggle (watchId) {\n      this.$store.dispatch('toggleWatchFavorite', watchId)\n    },\n\n    isFavoriteWatch (watchId) {\n      if (this.Favorites) {\n        let found = this.Favorites.find((w) => {\n          return w.watch_id == watchId\n        })\n        if (found) return true\n        else return false\n      }\n    },\n\n    truncatedWatchName (name, lengthToTruncate) {\n      if (name.length > lengthToTruncate) {\n        return name.substring(0, lengthToTruncate) + '...'\n      } else { return name }\n    },\n\n\n    titleCase (str) {\n      var splitStr = str.toLowerCase().split(' ')\n      for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\n      }\n      return splitStr.join(' ')\n    }\n  },\n\n  computed: {\n    Favorites () {\n      return this.$store.state.Favorites\n    },\n\n    isFilteringCollection () {\n      return this.$store.state.isFilteringCollection\n    },\n\n     currentTruncatedLength () {\n      let val;\n      let currentButtonState = this.$store.state.CurrentCardSize\n      switch (currentButtonState) {\n        case 'sm':\n          val = 8\n          break\n        case 'md':\n          val = 12\n          break\n        case 'lg':\n          val = 18\n          break\n        default:\n          val = 8\n      }\n    return val      \n    },\n\n    currentCardSize() {\n        return this.$store.state.CurrentCardSize\n    },\n\n    FilteredCollection () {\n        return this.$store.state.FilteredCollection\n    },\n\n    Collection: {\n        get () {\n            if (this.isManagingCollection) {\n                return this.$store.state.FilteredCollection\n            } else {\n                return this.$store.state.Collection\n            }\n        },\n        set (newCollectionOrder) {\n            if (!this.isManagingCollection) {\n                this.$store.dispatch('isTryingShuffleWhileManage', false)            \n                return this.$store.dispatch('updateCollectionOrder', newCollectionOrder)\n            } else {\n                this.$store.dispatch('isTryingShuffleWhileManage', true)\n            }\n      }\n    },\n\n    isFilteringCollection () {\n      return this.$store.state.FilteredCollection\n    },\n\n    isManagingCollection () {\n      return this.$store.state.isManagingCollection\n    },\n\n    isViewingPreviousWatches () {\n      return this.$store.state.isViewingPreviousWatches\n    },\n\n    isShowFlags () {\n      return this.$store.state.isShowFlags\n    },\n\n    isShowEditFlags () {\n      return this.$store.state.isShowEditFlags\n    },\n\n    currentCardSize () {\n      return this.$store.state.CurrentCardSize\n    },\n\n    smSizeCard () {\n      return this.$store.state.MobileCardSizeToUse\n    },\n\n    mdSizeCard () {\n      return this.$store.state.DesktopCardSizeToUse\n    }\n  },\n}\n</script>\n\n<style scoped>\n\n.bgBlue {\n        background-color: rgba(32, 99, 155, .3);\n    }\n.r-0 {\n    right: 0;\n}\n    .no-pointer {\n        pointer-events: none;\n    }\n\n    #watchName {\n        font-size: .80em;\n    }\n\n    #seeMore {\n        font-size: .70em;\n    }\n\n    #searchRef {\n        font-size: .60em;\n    }\n\n    .btn {\n        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n    }\n\n    .right {\n        float: right;\n    }\n\n    .left {\n        float: left;\n    }\n\n    .flag {\n        padding: .35em 0 !important;\n        font-size: .75em;\n    }\n\n    .p-half {\n        padding: .5rem;\n    }\n\n    .border-xl {\n        border: 1px solid lightgray;\n    }\n\n    .watchImgWrapper_Sm {\n        width: 100%;\n        height: 8rem;\n    }\n\n    .watchImgWrapper_Md {\n        width: 100%;\n        height:10.5rem;\n    }\n\n    .watchImgWrapper_Lg {\n        width: 100%;\n        height: 13.5rem;\n    }\n\n    .smallHeartIcon {\n        width: 25px;\n        z-index: 1;\n    }\n\n    .heartIcon {\n        width: 35px;\n        z-index: 1;\n    }\n\n    \n\n    @media(max-width: 1000px) {\n        .watchImgWrapper_Sm {\n            width: 100%;\n            height: 5rem;\n        }\n\n        .watchImgWrapper_Md {\n            width: 100%;\n            height:8rem;\n        }\n\n        .watchImgWrapper_Lg {\n            width: 100%;\n            height: 11rem;\n        }\n\n        .specs {\n            font-size: .75rem;\n        }\n    }\n\n    @media(max-width: 900px) {\n        .watchImgWrapper_Sm {\n            width: 100%;\n            height: 4rem;\n        }\n\n        .watchImgWrapper_Md {\n            width: 100%;\n            height:5.5rem;\n        }\n\n        .watchImgWrapper_Lg {\n            width: 100%;\n            height: 8rem;\n        }\n        \n        .specs {\n            font-size: .6rem;\n        }\n    }\n\n    .watchImg {\n        width: auto;\n        max-width: 100%;\n        min-height: 75%;\n        height: auto;\n        float: left;\n        max-height: 100%;\n    }\n\n    .tallWatchImg {\n        width: auto;\n        /* max-height: 25rem; */\n    }\n\n    @media(max-width: 1000px) {\n        .border-xl{\n            border: none;\n        }\n    }\n\n    @media(min-width: 768px) and (max-width: 1000px) {\n        #searchRef, #seeMore {\n            font-size: .6em;\n        }\n\n        #watchName {\n            font-size: .65em;\n        }\n\n        .heartIcon {\n            width: 28px;\n        }\n    }\n\n    @media(max-width: 765px) {\n        .watchImg {\n            float:none;\n        }\n    }\n\n    @media(max-width: 600px) {\n        #editIcon {\n        background-size: 1.25em;\n        }\n\n        .flag {\n            font-size: .85rem;\n            padding: .1em !important;\n\n        }\n\n        .heartIcon {\n            width: 22px;\n        }\n\n        .smallHeartIcon {\n        width: 18px;\n        z-index: 1;\n        }\n    }\n\n    @media(max-width: 415px) {\n        #searchRef, #seeMore {\n            font-size: .65rem;\n        }\n\n        .flag {\n            font-size: 10.5px;\n            padding: .2em !important;\n        }\n\n        .heartIcon {\n            width: 20px;\n        }\n    }\n\n\n\n\n\n</style>\n"]}]}