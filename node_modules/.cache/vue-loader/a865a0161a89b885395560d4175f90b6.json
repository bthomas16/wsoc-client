{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/src/components/Auth/Register.vue?vue&type=style&index=0&fluid=true&lang=css&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/src/components/Auth/Register.vue","mtime":1546192518172},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.form-control:focus {\n    border: none;\n    outline: none !important;\n}\n\n    #register-wrapper {\n        padding:auto;\n    }\n\n    .card {\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    }\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components/Auth","sourcesContent":["<template>\n    <b-container>\n        <b-row>\n            <div class=\"card-text mx-auto w-100\"> \n                <b-alert show v-bind:variant=\"responseStyle\" v-if=\"showAlert\" class=\"py-1 py-md-0 my-1\">{{responseMessage}} <em v-if=\"isRefreshPage\" @click=\"reloadPage\"> - Try Again</em></b-alert> \n                <b-form @submit.prevent=\"onSubmit\">\n                    <b-form-group id=\"email\"\n                        v-if=\"card == 1\"\n                        label=\"Email:\"\n                        label-for=\"Email\"\n                        class=\"mt-md-2\"\n                        description=\"We'll never share your email with anyone.\">\n                        <b-form-input id=\"email\"\n                                    type=\"email\"\n                                    v-model=\"form.email\"\n                                    required\n                                    autocomplete=\"off\"\n                                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                                    placeholder=\"Start with an email\"\n                                    @input=\"validateEmail(form.email)\"\n                                    >\n                        </b-form-input>\n                    </b-form-group>\n                    <b-form-group id=\"password\"\n                        v-if=\"card == 1\"\n                        label=\"Password:\"\n                        label-for=\"password\"\n                        class=\"mt-md-3\">\n                        <b-form-input id=\"password\"\n                                    type=\"password\"\n                                    v-model=\"form.password\"\n                                    required\n                                    autocomplete=\"off\"\n                                    placeholder=\"Create a password\"\n                                    @input=\"validatePassword(form.password)\">\n                        </b-form-input>\n                    </b-form-group>\n                    <b-form-group id=\"names\"\n                        v-if=\"card == 2\"\n                        label=\"First Name:\"\n                        label-for=\"First Name\">\n                        <b-form-input id=\"firstName\"\n                                    type=\"text\"\n                                    v-model=\"form.firstName\"\n                                    required\n                                    autocomplete=\"off\"\n                                    placeholder=\"First Name\">\n                        </b-form-input>\n                    </b-form-group>\n                    <b-form-group id=\"credentials\"\n                        v-if=\"card == 2\"\n                        label=\"Last Name:\"\n                        label-for=\"lastName\">\n                        <b-form-input id=\"password\"\n                                    type=\"text\"\n                                    v-model=\"form.lastName\"\n                                    required\n                                    autocomplete=\"off\"\n                                    placeholder=\"Last Name\"\n                                    >\n                        </b-form-input>\n                </b-form-group>\n                <h6 class=\"red thin h7\">{{passwordErrMsg}}</h6>\n                <b-row align-v=\"center\" class=\"my-md-2 pt-md-3\">\n                    <b-col cols=\"4\">\n                        <b-button variant=\"success\" @click=\"card=2\" :disabled=\"form.password.length < 4\" v-if=\"card == 1\">Continue</b-button>\n                        <b-button variant=\"success\" :disabled=\"!form.firstName || !form.lastName\" type=\"submit\" v-if=\"card == 2\">Finish</b-button>\n                    </b-col>\n                    <b-col cols=\"8\" class=\"right-align\">\n                        <p class=\"h8 m-1\">Already a user? <span class=\"link nowrap\" @click=\"toggleAuthChild\">Login Here</span></p>\n                    </b-col>\n                </b-row>\n            </b-form>\n        </div>\n        </b-row>         \n            \n    </b-container>\n</template>\n\n<script>\n    import axios from 'axios';\n    export default {\n    name: 'register',\n    data () {\n        return {\n            ROOT_API: process.env.VUE_APP_ROOT_API,\n            form: {\n                email: '',\n                firstName: '',\n                lastName: '',\n                password: ''\n            },\n            card: 1,\n            showAlert: false,\n            responseMessage: '',\n            responseStyle: 'light',\n            isRefreshPage: false,\n            showForm: true,\n            passwordErrMsg: '',\n            formValid: true\n        }\n    },\n    methods: {\n        onSubmit () \n        {\n            this.showAlert = false;\n            this.form.email.toLowerCase();\n            this.$store.dispatch('register', this.form)\n            .then((res) => {\n                if(res.isSuccess) {\n                    this.$store.dispatch('sendWelcomeEmail', this.form);\n                    this.$router.push({path: '/profile'});\n                }\n                else {\n                    this.showAlert = true;\n                    this.responseMessage = res.message;\n                    this.responseStyle = 'danger';\n                    this.isRefreshPage = res.isRefreshPage;\n                }\n            }).catch(err => {\n                this.showAlert = true;\n                this.responseMessage = err.message;\n                this.responseStyle = 'danger';\n            })\n        },\n\n        toggleAuthChild ()\n        {\n            this.$emit('toggleAuthView')\n        },\n\n        validateEmail(email) \n        {\n            // regex expression making sure email is in valid format\n            var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if(re.test(email)) {\n                return true;\n            }\n            else {\n                this.form.password = '';\n                return re.test(email);\n            }\n        },\n\n        validatePassword(password) \n        {\n            if(password.length < 4) \n            {\n                this.passwordErrMsg = 'Password must be at least 4 characters';\n                return false;\n            }\n            else {\n                this.passwordErrMsg = '';\n                return true;\n            }\n        },\n\n        validateNames(first, last) \n        {\n            if(first.length && last.length) return true;\n            else return false;\n        },\n\n        reloadPage() {\n            location.reload();\n        }\n\n        // isDuplicateEmail(email)\n        // {\n        //     console.log('should check', email)\n        //     axios.get('/api/user/isDuplicateEmail?email=' + email).then(res => {\n        //         console.log(res)\n        //     })\n        // }\n    }\n}\n</script>\n\n<style fluid>\n.form-control:focus {\n    border: none;\n    outline: none !important;\n}\n\n    #register-wrapper {\n        padding:auto;\n    }\n\n    .card {\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    }\n</style>"]}]}