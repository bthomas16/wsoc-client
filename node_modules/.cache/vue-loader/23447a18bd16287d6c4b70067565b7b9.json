{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/FileSelector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/FileSelector.vue","mtime":1551730797232},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/babel-loader/lib/index.js","mtime":1548990846981},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":1548990847448},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js","mtime":1548990850526}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'fileSelector',\n  props: {\n    value: File,\n    isPreviewBox: Boolean\n  },\n  data: function () {\n    return {\n      ROOT_API: process.env.VUE_APP_ROOT_API,\n      isS3Uploading: false,\n      imgBase64Array: []\n    }\n  },\n\n  methods: {\n        async uploadImagesToBase64 (e) {\n            const vm = this\n\n            let files = e.target.files\n\n            for (let j = 0; j < files.length; j++) {\n                await vm.getBase64Url(files[j]).then(fileB64Obj => {\n\n                    vm.imgBase64Array.push(fileB64Obj)\n\n                    if (vm.imgBase64Array.length == files.length) {\n                        vm.$emit('setImagesOnAddWatch', vm.imgBase64Array)\n                        // vm.$refs.fileUpload.value = ''\n                        vm.imgBase64Array = []    \n                    }\n                })\n            }\n        },\n\n\n        getBase64Url (file) {\n            return new Promise((resolve, reject) => {\n                let reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = (e) => {\n                    // let fileExtension = file.src.split(\";\")[0].split(\"/\")\n                    // fileExtension = fileExtension[fileExtension.length - 1]\n\n                    let fileB64Obj = {\n                        src: reader.result,\n                        fileName: file.name,\n                        // fileExtension: fileExtension\n                    }\n\n                    resolve(fileB64Obj);\n                }\n                reader.onerror = error => reject(error);\n            });\n        }\n    },\n\n\n\n    // FR.onload = function(e) {\n                    //     let result = e.target.result\n                    //     let imgBase64Url = e.target.result\n                    //     vm.imgBase64Array.push(\n                    //         { imgBase64Url,\n                    //           order: index,\n                    //           fileName: files[index].name\n                    //         })\n                    //     if (vm.imgBase64Array.length == files.length) {\n                    //         vm.$emit('setImagesOnAddWatch', vm.imgBase64Array)\n                    //     }\n                    // }\n            \n\n    \n\n}\n",null]}