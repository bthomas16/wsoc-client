{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/src/components/Profile/Collection/WatchCollection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/src/components/Profile/Collection/WatchCollection.vue","mtime":1547087195995},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport draggable from 'vuedraggable'\nimport RemoveWatchModal from './Modals/RemoveWatchModal.vue'\nimport SeeRemovedWatchModal from './Modals/SeeRemovedWatchModal.vue'\nimport WatchFlags from './WatchFlags.vue'\n\nexport default {\n  name: 'watchCollection',\n  components: {\n    draggable,\n    removedWatchModal: SeeRemovedWatchModal,\n    removeWatchModal: RemoveWatchModal,\n    watchFlags: WatchFlags\n  },\n\n  data () {\n    return {\n      addWatchDragOptions: {\n        dropzoneSelector: '.dropzone',\n        draggableSelector: '.watch',\n        showDropzoneAreas: true\n      },\n      ROOT_API: process.env.VUE_APP_ROOT_API,\n      drag: false,\n      emptyHeart: process.env.VUE_APP_ROOT_API + '/api/static-assets/empty-heart.png',\n      fullHeart: process.env.VUE_APP_ROOT_API + '/api/static-assets/full-heart.png',\n      showFlags: true,\n      removedWatchToSeeReasons: null,\n      removedWatchToSee: null,\n      // DRAGABLE PROPERTIES\n\n      watchToRemove: null,\n      reasonsWatchMoved: {\n        receivedBy: null,\n        typeMoved: null,\n        value: null,\n        trades: []\n      },\n\n      draggingId: '',\n      isAnimate: true,\n      TestArray: [\n        'option1',\n        'option2',\n        'option3',\n        'option4'\n      ]\n    }\n  },\n  methods: {\n    smSizeCardUse () {\n      this.smSizeCard = 2\n      this.mdSizeCard = 3\n    },\n\n    mdSizeCardUse () {\n      this.smSizeCard = 6\n      this.mdSizeCard = 6\n    },\n\n    lgSizeCardUse () {\n      this.smSizeCard = 12\n      this.mdSizeCard = 12\n    },\n\n    startDrag (e) {\n      this.drag = true\n      console.log(e.item.id, 'okayy', e.item)\n      this.draggingId = e.item.id\n      console.log(this.draggingId, 'its done')\n    },\n\n    endDrag (e) {\n      this.drag = false\n      this.isAnimate = false\n      setTimeout(() => {\n        this.isAnimate = true\n      }, 400)\n    },\n\n    orderChanged () {\n      this.$emit('orderChanged')\n    },\n\n    resetReasonsWatchMoved () {\n      this.reasonsWatchMoved = {\n        receivedBy: null,\n        typeMoved: null,\n        value: null,\n        trades: []\n      }\n    },\n\n    selectWatch (watch) {\n      this.$emit('selectWatch', watch)\n    },\n\n    editWatch (watch) {\n      console.log('fuc')\n      this.$emit('editWatchModal', watch)\n    },\n\n    // Remove a watch From Collection\n    removeWatchModal (watch) {\n      this.watchToRemove = watch\n      this.$refs.removeWatchModal.show()\n    },\n\n    openModal () {\n      this.$refs.removedWatchModal.show()\n    },\n\n    // View a watch that has been removed from collection\n    removedWatchModal (watch) {\n      this.removedWatchToSee = watch\n      this.$refs.removedWatchModal.show()\n    },\n\n    submitRemoveWatchForm () {\n      let watchDetails = { watchToRemove: this.watchToRemove, reasonsWatchMoved: this.reasonsWatchMoved }\n      this.$store.dispatch('createRemoveWatch', watchDetails)\n      this.$store.dispatch('removeExistingWatch', this.watchToRemove.id).then(() => {\n        // TODO: NOT THIS\n        setTimeout(() => {\n          this.$store.dispatch('getNumberFSOT')\n          this.$store.dispatch('loadUserCollection')\n          this.resetReasonsWatchMoved()\n          this.$refs.removeWatchModal.hide()\n        }, 1)\n      })\n    },\n\n    favoriteToggle (watchId) {\n      this.$store.dispatch('toggleWatchFavorite', watchId)\n    },\n\n    isFavoriteWatch (watchId) {\n      if (this.Favorites) {\n        let found = this.Favorites.find((w) => {\n          return w.watch_id == watchId\n        })\n        if (found) return true\n        else return false\n      }\n    },\n\n    // truncatedWatchName(name, lengthToTruncate) {\n    //     if(name.length > lengthToTruncate) {\n    //         return name.substring(0, lengthToTruncate) + '...';\n    //     }\n    //     else\n    //         return name;\n    // },\n\n    titleCase (str) {\n      var splitStr = str.toLowerCase().split(' ')\n      for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\n      }\n      return splitStr.join(' ')\n    }\n  },\n\n  computed: {\n    Favorites () {\n      return this.$store.state.Favorites\n    },\n\n    isFilteringCollection () {\n      return this.$store.state.isFilteringCollection\n    },\n\n    Collection: {\n      set (newCollectionOrder) {\n        if (!this.isManagingCollection) {\n          return this.$store.dispatch('updateCollectionOrder', newCollectionOrder)\n        }\n      },\n      get () {\n        let isMan = this.isManagingCollection\n        console.log(this.isManagingCollection)\n        if (isMan) {\n          return this.$store.state.FilteredCollection\n        } else return this.$store.state.Collection\n      }\n    },\n\n    isFilteringCollection () {\n      return this.$store.state.FilteredCollection\n    },\n\n    isManagingCollection () {\n      return this.$store.state.isManagingCollection\n    },\n\n    isViewingPreviousWatches () {\n      return this.$store.state.isViewingPreviousWatches\n    },\n\n    isShowFlags () {\n      return this.$store.state.isShowFlags\n    },\n\n    isShowEditFlags () {\n      return this.$store.state.isShowEditFlags\n    },\n\n    currentCardSize () {\n      return this.$store.state.CurrentCardSize\n    },\n\n    smSizeCard () {\n      return this.$store.state.MobileCardSizeToUse\n    },\n\n    mdSizeCard () {\n      return this.$store.state.DesktopCardSizeToUse\n    }\n  }\n}\n",null]}