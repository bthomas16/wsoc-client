{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/src/components/Profile/Collection/WatchFlags.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/src/components/Profile/Collection/WatchFlags.vue","mtime":1547087195995},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/wc-client-vue3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'watchFlags',\n  props: ['watch', 'isShowFlags', 'isShowEditFlags', 'isManagingCollection'],\n  data () {\n    return {\n      env: process.env.NODE_ENV\n    }\n  },\n  methods: {\n    removeWatchModal (watch) {\n      this.$emit('removeWatchModal', watch)\n    },\n\n    removedWatchModal (watch) {\n      this.$emit('removedWatchModal', watch)\n    },\n\n    editWatch (watch) {\n      console.log('duck')\n      this.$emit('editWatch', watch)\n    },\n\n    truncatedWatchName (name, lengthToTruncate) {\n      if (name.length > lengthToTruncate) {\n        return name.substring(0, lengthToTruncate) + '...'\n      } else { return name }\n    },\n\n    titleCase (str) {\n      var splitStr = str.toLowerCase().split(' ')\n      for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\n      }\n      return splitStr.join(' ')\n    },\n\n    GetAbbreviatedWatchType (fullName) {\n      switch (fullName) {\n        case 'automatic':\n          return 'Auto'\n          break\n        case 'solar':\n          return 'Solar'\n          break\n        case 'quartz':\n          return 'Quartz'\n          break\n        case 'manual':\n          return 'Manual'\n          break\n      }\n    }\n  },\n\n  computed: {\n    currentTruncatedLength () {\n      let currentButtonState = this.$store.state.CurrentCardSize\n      switch (currentButtonState) {\n        case 'sm':\n          currentButtonState = 8\n          return currentButtonState\n          break\n        case 'md':\n          currentButtonState = 18\n          return currentButtonState\n          break\n        case 'lg':\n          currentButtonState = 28\n          return currentButtonState\n          break\n        default:\n          currentButtonState = 8\n          return currentButtonState\n      }\n    },\n\n    IsViewingPreviousWatches () {\n      // console.log('testerizer', this.$store.state.isViewingPreviousWatches)\n      return this.$store.state.isViewingPreviousWatches\n    }\n  }\n}\n",null]}