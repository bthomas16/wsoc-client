{"remainingRequest":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/Modals/AddWatchModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/src/components/Profile/Collection/Modals/AddWatchModal.vue","mtime":1550965359198},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":1548990847448},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/babel-loader/lib/index.js","mtime":1548990846981},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/cache-loader/dist/cjs.js","mtime":1548990847448},{"path":"/Users/brentthomas/Desktop/Developer/Sandbox/JS/CRUD/VUE/WatchCollection/client/node_modules/vue-loader/lib/index.js","mtime":1548990850526}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport draggable from 'vuedraggable'\nimport FileSelector from '../FileSelector.vue'\nimport AutoCompleteComponent from '../../../AutoComplete.vue'\nimport AutoComplete from '../../../../AutoCompleteCollections/AutoComplete.js'\nimport LoadImageUtility from '../../../../Utilities/LoadImageUtility'\n\n\nexport default {\n  components: {\n    draggable,\n    acc: AutoCompleteComponent,\n    fileSelector: FileSelector\n  },\n  name: 'addWatchModal',\n  props: {\n    addWatch: {\n      src: Array\n    },\n    addWatchCount: Number\n  },\n\n  data () {\n\n    return {\n      fieldToSet: '',\n      arrowCounter: -1,\n      autoCompleteResults: [],\n      keyboardEnterSubmitAddWatchFieldToSet: '',\n      isShowBrandAutoCompleteBox: false,\n      isShowMovementAutoCompleteBox: false,\n      isS3UploadEvent: false,        \n      file: null,\n      addWatchTitle: 'Add your first watch!',\n\n      fullKitOptions: [\n        { text: 'Full Kit', value: true },\n        { text: 'Not Full Kit', value: false }\n        // { text: 'Box / No Papers', value: 3},\n        // { text: 'Box / No Strap', value: 4 }\n      ],\n\n      isForSaleOptions: [\n        { text: 'For Sale', value: true },\n        { text: 'Not For Sale', value: false }\n        // { text: 'Accepting Offers', value: 3},\n      ],\n\n      isForTradeOptions: [\n        { text: 'For Trade', value: true },\n        { text: 'Not For Trade', value: false }\n        // { text: 'Accepting Offers', value: 3},\n      ],\n\n      styleOptions: [\n        { value: null, text: 'Select a Style', disabled: true },\n        { value: 'diver', text: 'Diver' },\n        { value: 'dress', text: 'Dress' },\n        { value: 'chronograph', text: 'Chronograph' },\n        { value: 'tourbillon', text: 'Tourbillon' },\n        { value: 'black tie', text: 'Black Tie' },\n        { value: 'sport', text: 'Sport' },\n        { value: 'smart', text: 'Smart' },\n        { value: 'apple', text: 'Apple' },\n        { value: 'casual', text: 'Casual' },\n        { value: 'orienteering', text: 'Orienteering' }\n      ],\n\n      accuracyOptions:\n            [\n              { value: null, text: 'Select Accuracy' },\n              { value: '-6 -', text: '-6 seconds or less' },\n              { value: '-5', text: '-5 seconds' },\n              { value: '-4', text: '-4 seconds' },\n              { value: '-3', text: '-3 seconds' },\n              { value: '-2', text: '-2 seconds' },\n              { value: '-1', text: '-1 seconds' },\n              { value: '0', text: '0 seconds' },\n              { value: '+1', text: '+1 seconds' },\n              { value: '+2', text: '+2 seconds' },\n              { value: '+3', text: '+3 seconds' },\n              { value: '+4', text: '+4 seconds' },\n              { value: '+5', text: '+5 seconds' },\n              { value: '+6', text: '+6 seconds' },\n              { value: '+6 +', text: '+6 seconds or more' }\n            ],\n\n      // movementOptions:\n      // [\n      //     { value: null, text: 'Select a Movement' },\n      //     { value: 'Swiss - ETA 2824-2', text: 'Swiss - ETA 2824-2'},\n      //     { value: 'Swiss - ETA 2824-2', text: 'Swiss - ETA 2824-2'},\n      //     { value: 'Swiss - ETA 2824-2', text: 'Swiss - ETA 2824-2'},\n      //     { value: 'Swiss - ETA 2824-2', text: 'Swiss - ETA 2824-2'},\n      //     { value: 'Swiss - ETA 2824-2', text: 'Swiss - ETA 2824-2'},\n      //     { value: 'Swiss - ETA 2824-2', text: 'Swiss - ETA 2824-2'},\n      //     { value: 'Swiss - ETA 2824-2', text: 'Swiss - ETA 2824-2'},\n      //     { value: 'Swiss - ETA 2824-2', text: 'Swiss - ETA 2824-2'}\n      // ],\n\n      sizeLugToLugOptions:\n            [\n              { value: null, text: 'Select a Lug to Lug Size', disabled: true },\n              { value: '15mm', text: 'Under 16mm wide' },\n              { value: '16mm', text: '16mm' },\n              { value: '17mm', text: '17mm' },\n              { value: '18mm', text: '18mm' },\n              { value: '19mm', text: '19mm' },\n              { value: '20mm', text: '20mm' },\n              { value: '21mm', text: '21mm' },\n              { value: '22mm', text: '22mm' },\n              { value: '23mm', text: '23mm' },\n              { value: '24mm', text: '24mm' },\n              { value: '25mm', text: '25mm' },\n              { value: '26mm', text: '26mm' },\n              { value: '27mm', text: '27mm' },\n              { value: '28mm', text: '28mm' },\n              { value: '29mm', text: '29mm' },\n              { value: '30mm', text: '30mm' },\n              { value: '31mm', text: '31mm' },\n              { value: '32mm', text: '32mm' },\n              { value: '33mm', text: '33mm' },\n              { value: '34mm', text: '34mm' },\n              { value: '35mm', text: '35mm' },\n              { value: '36mm', text: 'Over 35mm wide' }\n            ],\n\n      sizeWidthOptions:\n            [\n              { value: null, text: 'Width', disabled: true },\n              { value: '27mm', text: 'Under 28mm wide' },\n              { value: '28mm', text: '28mm' },\n              { value: '29mm', text: '29mm' },\n              { value: '30mm', text: '30mm' },\n              { value: '31mm', text: '31mm' },\n              { value: '32mm', text: '32mm' },\n              { value: '33mm', text: '33mm' },\n              { value: '34mm', text: '34mm' },\n              { value: '35mm', text: '35mm' },\n              { value: '36mm', text: '36mm' },\n              { value: '37mm', text: '37mm' },\n              { value: '38mm', text: '38mm' },\n              { value: '39mm', text: '39mm' },\n              { value: '40mm', text: '40mm' },\n              { value: '41mm', text: '41mm' },\n              { value: '42mm', text: '42mm' },\n              { value: '43mm', text: '43mm' },\n              { value: '44mm', text: '44mm' },\n              { value: '45mm', text: '45mm' },\n              { value: '46mm', text: '46mm' },\n              { value: '47mm', text: '47mm' },\n              { value: '48mm', text: '48mm' },\n              { value: '49mm', text: '49mm' },\n              { value: '50mm', text: '50mm' },\n              { value: '51mm', text: '51mm' },\n              { value: '52mm', text: '52mm' },\n              { value: '53mm', text: '53mm' },\n              { value: '54mm', text: '54mm' },\n              { value: '55mm', text: '55mm' },\n              { value: '56mm', text: '56mm' },\n              { value: '57mm', text: '57mm' },\n              { value: '58mm', text: '58mm' },\n              { value: '59mm', text: '59mm' },\n              { value: '60mm', text: 'Over 59mm wide' }\n            ],\n\n      sizeHeightOptions:\n            [\n              { value: null, text: 'Height', disabled: true },\n              { value: '6mm', text: 'Under 7mm Height' },\n              { value: '7mm', text: '7mm' },\n              { value: '8mm', text: '8mm' },\n              { value: '9mm', text: '9mm' },\n              { value: '10mm', text: '10mm' },\n              { value: '11mm', text: '11mm' },\n              { value: '12mm', text: '12mm' },\n              { value: '13mm', text: '13mm' },\n              { value: '14mm', text: '14mm' },\n              { value: '15mm', text: '15mm' },\n              { value: '16mm', text: '16mm' },\n              { value: '17mm', text: '17mm' },\n              { value: '18mm', text: '18mm' },\n              { value: '19mm', text: '19mm' },\n              { value: '20mm', text: '20mm' },\n              { value: '21mm', text: '21mm' },\n              { value: '22mm', text: '22mm' },\n              { value: '23mm', text: '23mm' },\n              { value: '24mm', text: '24mm' },\n              { value: '25mm', text: '25mm' },\n              { value: '26mm', text: '26mm' },\n              { value: '27mm', text: '27mm' },\n              { value: '28mm', text: '28mm' },\n              { value: '29mm', text: '29mm' },\n              { value: '30mm', text: 'Over 29mm Height' }\n            ],\n      drag: false,\n      draggingId: '',\n\n\n      isShowingCroppie: false,\n      cropped: null\n    }\n  },\n\n  methods: {\n\n    //   AUTOCOMPLETE METHODS\n\n    closeAutCompleteBoxes () {\n        this.isShowBrandAutoCompleteBox = false\n        this.isShowMovementAutoCompleteBox = false\n        \n        this.autoCompleteResults = []\n    },\n\n    onArrowDown() {\n        if (this.arrowCounter < this.autoCompleteResults.length) {\n          this.arrowCounter = this.arrowCounter + 1;\n        }\n      },\n\n      onArrowUp() {\n        if (this.arrowCounter > 0) {\n          this.arrowCounter = this.arrowCounter - 1;\n        }\n      },\n\n      onEnter() {\n        this.selectAutoCompleteResult(this.keyboardEnterSubmitAddWatchFieldToSet, this.autoCompleteResults[this.arrowCounter])\n        this.arrowCounter = -1;\n      },\n\n      autoCompleteSearchForBrands (searchTerm, addWatchField, Category) {\n          // searchTerm is set with v-model\n           this.isShowBrandAutoCompleteBox = true  \n           this.keyboardEnterSubmitAddWatchFieldToSet = \"brand\"\n           //get all amatching\n           let allMatchingResults = AutoComplete.AutoComplete(Category, searchTerm)\n           let StartingLetterMatchesSearchTerm = allMatchingResults.filter(result => {\n               return result.charAt(0).toLowerCase() == searchTerm.charAt(0).toLowerCase()\n           })\n\n            // concat, remove matching\n            let catArr = StartingLetterMatchesSearchTerm.concat(allMatchingResults)\n            this.autoCompleteResults = catArr.filter((result, index) => {\n                return catArr.indexOf(result) == index\n            })\n      },\n\n      autoCompleteSearchForMovements (searchTerm, addWatchField, Category) {\n          // searchTerm is set with v-model\n        \n           this.isShowMovementAutoCompleteBox = true\n           this.keyboardEnterSubmitAddWatchFieldToSet = \"movement\"\n           \n           //get all amatching\n           let allMatchingResults = AutoComplete.AutoComplete(Category, searchTerm)\n           let StartingLetterMatchesSearchTerm = allMatchingResults.filter(result => {\n               return result.charAt(0).toLowerCase() == searchTerm.charAt(0).toLowerCase()\n           })\n\n            // concat, remove matching\n            let catArr = StartingLetterMatchesSearchTerm.concat(allMatchingResults)\n            this.autoCompleteResults = catArr.filter((result, index) => {\n                return catArr.indexOf(result) == index\n            })\n      },\n\n      selectAutoCompleteResult (fieldToSet, result) {\n          console.log('sretting', result)\n          this.addWatch[fieldToSet] = result\n          setTimeout(() => {\n              this.isShowBrandAutoCompleteBox = false  \n              this.isShowMovementAutoCompleteBox = false\n              this.autoCompleteResults\n          })\n      },\n\n\n    //   END OF AUTOCOMPLETE\n\n\n    ContainsS3Information(str) {\n        let val = LoadImageUtility.ContainsS3Information(str)\n        this.$store.dispatch('CanImageCanBeEditedByUrl', val)\n        return val\n    },\n\n\n      saveCrop() {\n          this.crop()\n          this.SetCropBackToImageSrc(this.cropped)\n          setTimeout(()=> {\n              this.isShowingCroppie = false\n          },400)\n\n          this.$ga.event({\n                eventCategory: 'Manage_Collection',\n                eventAction: 'Crop_Watch_Save_Btn_Click',\n                eventLabel: 'Saving Cropped Watch Image'\n            })\n      },\n\n        crop() {\n            let options = {\n                format: 'jpeg', \n                circle: false\n            }\n            // this.isShowingCroppie = false\n            this.$refs.croppieRef.result(options);\n        },\n\n        SetCropBackToImageSrc(croppedImg) {\n            let croppieIndex = this.$store.state.croppieWatchOrder\n            this.addWatch.src.images[croppieIndex].src = croppedImg\n        },\n\n        result(output) {\n            this.cropped = output;\n        },\n\n        update(val) {\n            // this.$refs.croppieRef.update(val);\n            this.crop()\n        },\n\n        rotate() {\n            // Rotates the image\n            this.$refs.croppieRef.rotate(-90);\n            // this.crop()\n\n            this.$ga.event({\n                eventCategory: 'Manage_Collection',\n                eventAction: 'Rotate_Watch_Btn_Click',\n                eventLabel: 'Rotating Crop Watch Image'\n            })\n        },\n\n\n\n    addWatchSpecs (specs) {\n      this.addWatch.specs =\n            localStorage.setItem('addWatch', specs)\n    },\n\n    checkValidInput(val) {\n        if (val < 0) {\n            this.addWatch.condition = 0\n        } \n        else if (val > 10) {\n            this.addWatch.condition = 10\n        }\n        else {\n            this.addWatch.condition = val\n        }\n    },\n\n    setImagesOnAddWatch (images) {\n        images.forEach(img => {\n            let imageObjToPush = {\n                src: img, \n                order: this.addWatch.src.images.length// s3 bucket url path\n                // fileName: img.fileName\n            }\n            this.addWatch.src.images.push(imageObjToPush)\n            })\n        // console.log('loupiie', imgArr)\n        },\n\n    SetCroppieWatchAndDispatchCroppieWatchOrder (watchIndex) {\n        this.isShowingCroppie = true\n        this.$store.dispatch('setCroppieWatchOrder', watchIndex)\n        this.$refs.croppieRef.bind({\n            url: this.addWatch.src.images[this.$store.state.croppieWatchOrder].src\n        })\n    },\n\n    \n\n    removeWatchImage (indexToRemove) {\n      if (this.addWatch.src.images.length > 1) {\n        this.addWatch.src.images.splice(indexToRemove, 1)\n      } else {\n        return false\n      }\n    },\n\n    startDrag (e) {\n      this.drag = true\n      this.draggingId = e.item.id\n    },\n\n    endDrag (e) {\n      this.drag = false\n    },\n\n    getTurnaroundValue (mktVal, acqVal) {\n        return mktVal - acqVal\n    }\n\n  },\n\n  computed: {\n    checkScreenSize () {\n      if (window.innerWidth > 800) {\n        return 5\n      } else {\n        return 8\n      }\n    },\n\n    addWatchAccuracy () {\n      this.addWatch.accuracy = null\n    },\n\n    watchImages: {\n      set (newImagesOrder) {\n        this.addWatch.src.images = newImagesOrder\n      },\n      get () {\n        return this.addWatch.src.images\n      }\n    }\n  },\n  \n}\n",null]}